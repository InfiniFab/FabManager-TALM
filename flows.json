[
    {
        "id": "63c575ee660634f9",
        "type": "tab",
        "label": "prise photo",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "29fd68d1903a9d50",
        "type": "tab",
        "label": "Enregistrement utilisations",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b527c2c14fc2357e",
        "type": "tab",
        "label": "Flux de base de donnée",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f2c08f5a386b30e6",
        "type": "tab",
        "label": "Modifier enregistrement",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "004fd76ebe3d4b43",
        "type": "tab",
        "label": "Affichage photos",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "test_tab_001",
        "type": "tab",
        "label": "Flux de test",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fd7dc8247b3e3472",
        "type": "tab",
        "label": "Administartion",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "db6f982c.51d3d",
        "type": "websocket-listener",
        "z": "test_tab_001",
        "path": "/ws/colour",
        "wholemsg": "false"
    },
    {
        "id": "08f269069682e0d9",
        "type": "ui_base",
        "theme": {
            "name": "theme-custom",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "reset": false
            },
            "themeState": {
                "base-color": {
                    "default": "#4B7930",
                    "value": "#4B7930",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#4B7930",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#6db046",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#4b7930",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Fabmanager TALM",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "icon",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "42533697afdd57f3",
        "type": "ui_tab",
        "name": "Entrées usages",
        "icon": "forward",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6d23db44.1697d4",
        "type": "ui_tab",
        "name": "Liste entrées",
        "icon": "list",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e5d51755c0f66273",
        "type": "ui_tab",
        "name": "Modifier Entrées",
        "icon": "cached",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3f5cac0da3f21bde",
        "type": "ui_tab",
        "name": "Affichage Images",
        "icon": "now_wallpaper",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0a675065a55c6a8b",
        "type": "ui_tab",
        "name": "Test",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cb7e38a87943e192",
        "type": "ui_group",
        "name": "Usage",
        "tab": "42533697afdd57f3",
        "order": 1,
        "disp": true,
        "width": 21,
        "collapse": false,
        "className": ""
    },
    {
        "id": "eed4bf37.31aee",
        "type": "ui_group",
        "name": "Modifier entrées",
        "tab": "e5d51755c0f66273",
        "order": 1,
        "disp": true,
        "width": "5",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c271905f5bdbd844",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "6d23db44.1697d4",
        "order": 1,
        "disp": true,
        "width": "27",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0d38df91965e4f1f",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "e5d51755c0f66273",
        "order": 2,
        "disp": true,
        "width": 18
    },
    {
        "id": "1206a460156bc9ae",
        "type": "ui_group",
        "name": "Gallerie",
        "tab": "3f5cac0da3f21bde",
        "order": 1,
        "disp": true,
        "width": "27",
        "collapse": false,
        "className": ""
    },
    {
        "id": "3f0df9d3616d3899",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "0a675065a55c6a8b",
        "order": 2,
        "disp": true,
        "width": 20,
        "collapse": false,
        "className": ""
    },
    {
        "id": "eb348c43ea325940",
        "type": "ui_group",
        "name": "database",
        "tab": "0a675065a55c6a8b",
        "order": 3,
        "disp": true,
        "width": 19,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f3e4d0f93ccd21bc",
        "type": "ui_spacer",
        "z": "f2c08f5a386b30e6",
        "name": "spacer",
        "group": "eed4bf37.31aee",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "1056fd1f1c904ea6",
        "type": "ui_spacer",
        "z": "f2c08f5a386b30e6",
        "name": "spacer",
        "group": "eed4bf37.31aee",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "3c37b594251e3a29",
        "type": "ui_spacer",
        "z": "f2c08f5a386b30e6",
        "name": "spacer",
        "group": "eed4bf37.31aee",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "65ef96292b3cc03c",
        "type": "ui_spacer",
        "z": "f2c08f5a386b30e6",
        "name": "spacer",
        "group": "eed4bf37.31aee",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "f4845e3804b5bfbb",
        "type": "ui_spacer",
        "z": "f2c08f5a386b30e6",
        "name": "spacer",
        "group": "eed4bf37.31aee",
        "order": 9,
        "width": 5,
        "height": 1
    },
    {
        "id": "190840a9800edbde",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "ff26ce92d026b36b",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 3,
        "width": 3,
        "height": 1
    },
    {
        "id": "77d7214aa92515c2",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "9fab511442ebcf56",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 5,
        "width": 3,
        "height": 1
    },
    {
        "id": "7100b10f3a1c6d49",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 6,
        "width": 4,
        "height": 1
    },
    {
        "id": "6565c1a7940c27d7",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 7,
        "width": 3,
        "height": 1
    },
    {
        "id": "d695d15c404bb3e5",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 8,
        "width": 4,
        "height": 1
    },
    {
        "id": "96db50d7b93a802b",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 9,
        "width": 3,
        "height": 1
    },
    {
        "id": "86e5f9403354cdca",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "fc498a0b37ace0f2",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 11,
        "width": 3,
        "height": 1
    },
    {
        "id": "4c92718c881a3689",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 12,
        "width": 4,
        "height": 1
    },
    {
        "id": "868a3e1b8270c7f1",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 13,
        "width": 3,
        "height": 1
    },
    {
        "id": "55b2998e8f2c8672",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 14,
        "width": 4,
        "height": 1
    },
    {
        "id": "0f2edaef56b41bbe",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 15,
        "width": 3,
        "height": 1
    },
    {
        "id": "7f663fe388904e73",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 16,
        "width": 4,
        "height": 1
    },
    {
        "id": "f9218d009049294d",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 17,
        "width": 3,
        "height": 1
    },
    {
        "id": "8a95a8ed06e987a9",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 18,
        "width": 4,
        "height": 1
    },
    {
        "id": "50aec41a9695b979",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 19,
        "width": 3,
        "height": 1
    },
    {
        "id": "24a655f5961eba17",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 20,
        "width": 4,
        "height": 1
    },
    {
        "id": "6637f56ad0d002db",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 21,
        "width": 3,
        "height": 1
    },
    {
        "id": "7e0b2f9cea86b626",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 22,
        "width": 4,
        "height": 1
    },
    {
        "id": "50814ff0335a7f9f",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 23,
        "width": 3,
        "height": 1
    },
    {
        "id": "f46522b34cc33e1e",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 24,
        "width": 4,
        "height": 1
    },
    {
        "id": "163597ba65346f02",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 25,
        "width": 3,
        "height": 1
    },
    {
        "id": "f5ef9280ec7f376a",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 26,
        "width": 4,
        "height": 1
    },
    {
        "id": "d83d105a21c39fa3",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 27,
        "width": 3,
        "height": 1
    },
    {
        "id": "0e5fe2303fdc821e",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "b3b60f17fe6b2178",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 31,
        "width": 10,
        "height": 1
    },
    {
        "id": "81c80f7a3c4c5dd2",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 34,
        "width": 1,
        "height": 1
    },
    {
        "id": "3ac211f01a0d438c",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 35,
        "width": 10,
        "height": 1
    },
    {
        "id": "91ebac8dbadce94f",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "2a3159b10dce5cf5",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 37,
        "width": 10,
        "height": 1
    },
    {
        "id": "abf38c39a167557e",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 38,
        "width": 27,
        "height": 1
    },
    {
        "id": "d8dd9963c1548a33",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 41,
        "width": 5,
        "height": 1
    },
    {
        "id": "c111bb4851c9cb3b",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 43,
        "width": 15,
        "height": 1
    },
    {
        "id": "6f8c7c79fabcfad6",
        "type": "ui_spacer",
        "z": "004fd76ebe3d4b43",
        "name": "spacer",
        "group": "1206a460156bc9ae",
        "order": 45,
        "width": 3,
        "height": 1
    },
    {
        "id": "f3318311c7abaf8f",
        "type": "MySQLdatabase",
        "name": "mariadb",
        "host": "localhost",
        "port": "3306",
        "db": "nodered",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "2236dfd1.c909e",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "test",
        "tz": "",
        "charset": ""
    },
    {
        "id": "9fbd1a17f1217b11",
        "type": "ui_group",
        "name": "boutons 10 elvs",
        "tab": "0a675065a55c6a8b",
        "order": 1,
        "disp": true,
        "width": 10,
        "collapse": true,
        "className": ""
    },
    {
        "id": "ui_group_buttons",
        "type": "ui_group",
        "name": "Student Buttons",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "ui_group_dropdown",
        "type": "ui_group",
        "name": "Student Dropdown",
        "tab": "",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "19c4dceaef537425",
        "type": "ui_group",
        "name": "lasts students",
        "tab": "42533697afdd57f3",
        "order": 2,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "aa8f2816201ba50d",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "ac038db1ba917669",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 5,
        "width": 4,
        "height": 1
    },
    {
        "id": "43d76b48c429d93f",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 7,
        "width": 21,
        "height": 1
    },
    {
        "id": "c96b988e86fe2f4f",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 8,
        "width": 21,
        "height": 1
    },
    {
        "id": "8867b6fbd98da9fb",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 10,
        "width": 2,
        "height": 1
    },
    {
        "id": "bb701a4d27f74308",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 12,
        "width": 7,
        "height": 1
    },
    {
        "id": "f1d068c187613ebe",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "5d91205359c891f0",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 16,
        "width": 4,
        "height": 1
    },
    {
        "id": "a7ab3d66609c460b",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 19,
        "width": 2,
        "height": 1
    },
    {
        "id": "7886403b3f1622c3",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 21,
        "width": 7,
        "height": 1
    },
    {
        "id": "63e8d4f2de82cbf0",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 22,
        "width": 18,
        "height": 1
    },
    {
        "id": "a47fd3cf4be42572",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 25,
        "width": 4,
        "height": 1
    },
    {
        "id": "67f28423042af30c",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 27,
        "width": 9,
        "height": 1
    },
    {
        "id": "b1ac2c70b639a003",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 29,
        "width": 4,
        "height": 1
    },
    {
        "id": "fcc6ccc7a085054b",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 31,
        "width": 9,
        "height": 1
    },
    {
        "id": "86a049acc79fb973",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 32,
        "width": 21,
        "height": 1
    },
    {
        "id": "49d0293e108a316c",
        "type": "ui_spacer",
        "z": "29fd68d1903a9d50",
        "name": "spacer",
        "group": "cb7e38a87943e192",
        "order": 34,
        "width": 12,
        "height": 1
    },
    {
        "id": "ui_tab1",
        "type": "ui_tab",
        "name": "Test Tab",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "ui_group1",
        "type": "ui_group",
        "name": "Test Group",
        "tab": "ui_tab1",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "db8441a7bfa85d52",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "c271905f5bdbd844",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "453da7932e79516e",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "c271905f5bdbd844",
        "order": 5,
        "width": 22,
        "height": 1
    },
    {
        "id": "admin_tab",
        "type": "ui_tab",
        "name": "Admin Matériaux",
        "icon": "settings",
        "order": 10
    },
    {
        "id": "admin_group",
        "type": "ui_group",
        "name": "Gestion Matériaux",
        "tab": "admin_tab",
        "order": 1,
        "disp": true,
        "width": 14
    },
    {
        "id": "432ef441be1cca6f",
        "type": "ui_group",
        "name": "ajout materiaux",
        "tab": "admin_tab",
        "order": 2,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "group_commands",
        "type": "ui_group",
        "name": "Nouvelles Commandes",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "aec5d9e9eea485de",
        "type": "ui_group",
        "name": "test new insert",
        "tab": "0a675065a55c6a8b",
        "order": 4,
        "disp": true,
        "width": 18,
        "collapse": false,
        "className": ""
    },
    {
        "id": "f37dd1fdf3c8d57a",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 4,
        "width": 4,
        "height": 1
    },
    {
        "id": "9ed4d7c758673e9b",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "9e4c5688234613e2",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 8,
        "width": 7,
        "height": 1
    },
    {
        "id": "0fbc81ff5bed9fbe",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 9,
        "width": 7,
        "height": 1
    },
    {
        "id": "ec49f7699ad661f9",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "acb895c720d44345",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 14,
        "width": 5,
        "height": 1
    },
    {
        "id": "8d6f8fc765f8edf8",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 16,
        "width": 20,
        "height": 1
    },
    {
        "id": "d3a3a9ffaec44c77",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 19,
        "width": 8,
        "height": 1
    },
    {
        "id": "8d680a261ea1dbcb",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 22,
        "width": 8,
        "height": 1
    },
    {
        "id": "d2e55f23c8280fed",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 23,
        "width": 1,
        "height": 1
    },
    {
        "id": "9abbe72afe80955c",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 25,
        "width": 2,
        "height": 1
    },
    {
        "id": "1c38e3286520a389",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 27,
        "width": 9,
        "height": 1
    },
    {
        "id": "894b0ae0ee2f3fb9",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "7817e88b6eb0dba6",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 30,
        "width": 2,
        "height": 1
    },
    {
        "id": "7bd1fd0d9639d5d6",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 32,
        "width": 9,
        "height": 1
    },
    {
        "id": "5923c3b9884d133c",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 33,
        "width": 20,
        "height": 1
    },
    {
        "id": "c7719fd45d11c0c8",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 35,
        "width": 11,
        "height": 1
    },
    {
        "id": "03a6b372e2aee36b",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "3f0df9d3616d3899",
        "order": 36,
        "width": 20,
        "height": 1
    },
    {
        "id": "abe6f8338923ac98",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "aec5d9e9eea485de",
        "order": 1,
        "width": 10,
        "height": 1
    },
    {
        "id": "2a5a2ff9a8e7ebeb",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "aec5d9e9eea485de",
        "order": 4,
        "width": 2,
        "height": 1
    },
    {
        "id": "9c64e101c71126aa",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "aec5d9e9eea485de",
        "order": 6,
        "width": 2,
        "height": 1
    },
    {
        "id": "12523bd62eb927cb",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "aec5d9e9eea485de",
        "order": 9,
        "width": 10,
        "height": 1
    },
    {
        "id": "1e773f5f46c0500f",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "aec5d9e9eea485de",
        "order": 11,
        "width": 2,
        "height": 1
    },
    {
        "id": "df67dab11a04e848",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "aec5d9e9eea485de",
        "order": 12,
        "width": 10,
        "height": 1
    },
    {
        "id": "52eede066274fa67",
        "type": "ui_spacer",
        "z": "test_tab_001",
        "name": "spacer",
        "group": "aec5d9e9eea485de",
        "order": 14,
        "width": 2,
        "height": 1
    },
    {
        "id": "b4846b2d55a7522e",
        "type": "debug",
        "z": "63c575ee660634f9",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 780,
        "wires": []
    },
    {
        "id": "17e0b4296375492a",
        "type": "change",
        "z": "63c575ee660634f9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filepath",
                "pt": "msg",
                "to": "/home/pi/.node-red/lib/ui-media/lib/capture_photo/",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "time",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 380,
        "wires": [
            [
                "2cc8c6969357c87b"
            ]
        ]
    },
    {
        "id": "6749effeb46377df",
        "type": "inject",
        "z": "63c575ee660634f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "0",
        "payloadType": "num",
        "x": 1310,
        "y": 840,
        "wires": [
            [
                "3d5cd104abcf70e0"
            ]
        ]
    },
    {
        "id": "531ffe220519f165",
        "type": "inject",
        "z": "63c575ee660634f9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "1",
        "payloadType": "num",
        "x": 1310,
        "y": 880,
        "wires": [
            [
                "3d5cd104abcf70e0"
            ]
        ]
    },
    {
        "id": "2e2052b9b5575038",
        "type": "join",
        "z": "63c575ee660634f9",
        "name": "",
        "mode": "custom",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1260,
        "y": 680,
        "wires": [
            [
                "97e98c4bfb62f208"
            ]
        ]
    },
    {
        "id": "38179c84c47c6883",
        "type": "change",
        "z": "63c575ee660634f9",
        "name": "allume LED",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 600,
        "wires": [
            [
                "3d5cd104abcf70e0",
                "9699e4c143955c6c"
            ]
        ]
    },
    {
        "id": "97e98c4bfb62f208",
        "type": "change",
        "z": "63c575ee660634f9",
        "name": "etteindre LED",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 740,
        "wires": [
            [
                "3d5cd104abcf70e0",
                "b4846b2d55a7522e",
                "3514a56a864985e3"
            ]
        ]
    },
    {
        "id": "aadf218da852bb0b",
        "type": "debug",
        "z": "63c575ee660634f9",
        "name": "debug 20",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 520,
        "wires": []
    },
    {
        "id": "9699e4c143955c6c",
        "type": "debug",
        "z": "63c575ee660634f9",
        "name": "debug 21",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 600,
        "wires": []
    },
    {
        "id": "c509850758087071",
        "type": "change",
        "z": "63c575ee660634f9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filepath",
                "pt": "msg",
                "to": "/home/pi/station_photo/",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "filename",
                "pt": "msg",
                "to": "time",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 600,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "3514a56a864985e3",
        "type": "link out",
        "z": "63c575ee660634f9",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "235030a55954cb91"
        ],
        "x": 1545,
        "y": 700,
        "wires": []
    },
    {
        "id": "55b4502777e8ec3f",
        "type": "moment",
        "z": "63c575ee660634f9",
        "name": "",
        "topic": "",
        "input": "time",
        "inputType": "msg",
        "inTz": "Europe/Paris",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD_HH-mm-ss.jpg",
        "locale": "fr-FR",
        "output": "time",
        "outputType": "msg",
        "outTz": "Europe/Paris",
        "x": 660,
        "y": 380,
        "wires": [
            [
                "17e0b4296375492a"
            ]
        ]
    },
    {
        "id": "fd05f124bbde3140",
        "type": "moment",
        "z": "63c575ee660634f9",
        "name": "",
        "topic": "",
        "input": "time",
        "inputType": "msg",
        "inTz": "Europe/Paris",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MM-YYYY_HH-mm-ss.jpg",
        "locale": "fr-FR",
        "output": "time",
        "outputType": "msg",
        "outTz": "Europe/Paris",
        "x": 360,
        "y": 180,
        "wires": [
            [
                "c509850758087071"
            ]
        ]
    },
    {
        "id": "595fd844a90b852d",
        "type": "rpi-gpio in",
        "z": "63c575ee660634f9",
        "name": "",
        "pin": "19",
        "intype": "up",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 400,
        "y": 380,
        "wires": [
            [
                "55b4502777e8ec3f"
            ]
        ]
    },
    {
        "id": "350ef72d67f39a21",
        "type": "rpi-gpio in",
        "z": "63c575ee660634f9",
        "name": "",
        "pin": "16",
        "intype": "up",
        "debounce": "25",
        "read": false,
        "bcm": true,
        "x": 140,
        "y": 180,
        "wires": [
            [
                "fd05f124bbde3140"
            ]
        ]
    },
    {
        "id": "3d5cd104abcf70e0",
        "type": "rpi-gpio out",
        "z": "63c575ee660634f9",
        "name": "",
        "pin": "26",
        "set": "",
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1760,
        "y": 720,
        "wires": []
    },
    {
        "id": "68ffccee2ca7f911",
        "type": "rpi-gpio out",
        "z": "63c575ee660634f9",
        "name": "",
        "pin": "20",
        "set": true,
        "level": "0",
        "freq": "",
        "out": "out",
        "bcm": true,
        "x": 1080,
        "y": 760,
        "wires": []
    },
    {
        "id": "2cc8c6969357c87b",
        "type": "usbcamera",
        "z": "63c575ee660634f9",
        "filemode": "1",
        "filename": "image02.jpg",
        "filedefpath": "0",
        "filepath": "/home/pi/.node-red/lib/ui-media/lib/capture_photo",
        "fileformat": "jpeg",
        "resolution": "3",
        "name": "",
        "x": 1170,
        "y": 380,
        "wires": [
            [
                "2e2052b9b5575038",
                "38179c84c47c6883",
                "aadf218da852bb0b"
            ]
        ]
    },
    {
        "id": "d5d56893c001fa7a",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "function 1",
        "func": "//msg.payload = msg.payload[0][\"Nom de naissance\"];\nconst annee=[];\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    if (!annee.includes(msg.payload[i][\"Promotion\"])) {\n        annee.push(msg.payload[i][\"Promotion\"]);\n    }\n    \n    \n}\nannee.sort();\nmsg.payload=annee;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 120,
        "wires": [
            [
                "24944d2f6bd7b73a"
            ]
        ]
    },
    {
        "id": "24944d2f6bd7b73a",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 120,
        "wires": [
            [
                "8871ae607e4f9f4a"
            ]
        ]
    },
    {
        "id": "3c0392d64287068b",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "function 2",
        "func": "//msg.payload = msg.payload[0][\"Nom de naissance\"];\n\nconst list_eleve=[];\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    if(msg.payload[i][\"Promotion\"]==msg.annee){\n        list_eleve.push(msg.payload[i][\"Nom et Prénom d'usage\"]);\n    }\n   \n    \n}\nlist_eleve.sort();\nmsg.payload=list_eleve;\n\nif (list_eleve.length === 1) {\n    // Définir automatiquement l'élève dans le flow\n    flow.set('eleve', list_eleve[0]);\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 300,
        "wires": [
            [
                "2e53ec9c1ec81f4b"
            ]
        ]
    },
    {
        "id": "3e47a5bdef4676f0",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "annee",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 120,
        "wires": [
            [
                "e09d929765e1dbe4"
            ]
        ]
    },
    {
        "id": "6ccf513b14533288",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "annee",
                "pt": "msg",
                "to": "annee",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 300,
        "wires": [
            [
                "3c0392d64287068b"
            ]
        ]
    },
    {
        "id": "2e53ec9c1ec81f4b",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 300,
        "wires": [
            [
                "0acdb9d043158a67"
            ]
        ]
    },
    {
        "id": "2376d8a3bfe6c63c",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "impr3d_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "0e4953af2ba43c1d",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "laser_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "07be0a3666918d07",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reglement_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1860,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "25652091b5049f7d",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cao_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "2e2ec6aa05671e95",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filament",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1900,
        "y": 560,
        "wires": [
            [
                "cf8d049a052c5c4f"
            ]
        ]
    },
    {
        "id": "26ace20f8482afd1",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mat_laser",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1880,
        "y": 800,
        "wires": [
            [
                "6eed9d5a57ee0f30"
            ]
        ]
    },
    {
        "id": "3bef16889592706a",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filament_gr",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2360,
        "y": 600,
        "wires": [
            [
                "e73a7640d2e6e5af"
            ]
        ]
    },
    {
        "id": "533b2151254ad309",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mat_laser_qte",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2560,
        "y": 700,
        "wires": [
            [
                "e0280bff06030d09"
            ]
        ]
    },
    {
        "id": "932550833181df8e",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "eleve",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "997b241844d124af",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "annee",
                "pt": "msg",
                "to": "annee",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "eleve",
                "pt": "msg",
                "to": "eleve",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "impr3d_bool",
                "pt": "msg",
                "to": "impr3d_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "filament",
                "pt": "msg",
                "to": "filament",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "filament_gr",
                "pt": "msg",
                "to": "filament_gr",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "laser_bool",
                "pt": "msg",
                "to": "laser_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_laser",
                "pt": "msg",
                "to": "mat_laser",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_laser_qte",
                "pt": "msg",
                "to": "mat_laser_qte",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "reglement_bool",
                "pt": "msg",
                "to": "reglement_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "cao_bool",
                "pt": "msg",
                "to": "cao_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "prix_laser",
                "pt": "msg",
                "to": "prix_laser",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "prix_3d",
                "pt": "msg",
                "to": "prix_3d",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 560,
        "wires": [
            [
                "973a4689c5e96df6"
            ]
        ]
    },
    {
        "id": "c378e65b5480ba42",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "function 3",
        "func": "\nswitch (msg.payload) {\n  case 'PLA':\n    msg.payload=19.9;\n    break;\n  case 'PLA flex':\n    msg.payload=50;\n    break;\n  case 'PLA transparent':\n    msg.payload=40;\n    break;\n  case 'PLA bois':\n    msg.payload=51.8;\n    break;\n  default:\n    console.log(`type filament`);\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 520,
        "wires": [
            [
                "68d85b237798ba64"
            ]
        ]
    },
    {
        "id": "e73a7640d2e6e5af",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "function 4",
        "func": "let prix_kg;\n\nswitch (flow.get(\"filament\")) {\n  case 'PLA':\n    prix_kg=19.9;\n    break;\n  case 'PLA flex':\n    prix_kg=50;\n    break;\n  case 'PLA transparent':\n    prix_kg=40;\n    break; \n  case 'PLA bois':\n    prix_kg = 51.8;\n    break;\n  default:\n    console.log(`type filament`);\n}\n\nconst prix = prix_kg*parseInt(msg.payload)/1000;\nflow.set('prix_3d',prix);\nmsg.payload=prix;\nmsg.prix_kg=prix_kg;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2540,
        "y": 600,
        "wires": [
            [
                "e8a1a5d57ba0b28c"
            ]
        ]
    },
    {
        "id": "50699363d98dffab",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "function 5",
        "func": "\nswitch (msg.payload) {\n  case 'PMMA 3mm':\n    msg.payload=7.8;\n    break;\n  case 'PMMA 5mm':\n    msg.payload=12.59;\n    break;\n  case 'CP 3mm':\n    msg.payload=3;\n    break;\n  case 'CP 5mm':\n    msg.payload=3.3;\n    break;\n  default:\n    console.log(`type filament`);\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1860,
        "y": 760,
        "wires": [
            [
                "c9b200a30066b2b3"
            ]
        ]
    },
    {
        "id": "e0280bff06030d09",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "function 6",
        "func": "let prix_u;\n\nswitch (flow.get(\"mat_laser\")) {\n  case 'PMMA 3mm':\n    prix_u=7.8;\n    break;\n  case 'PMMA 5mm':\n    prix_u=12.59;\n    break;\n  case 'CP 3mm':\n    prix_u=3;\n    break;\n  case 'CP 5mm':\n    prix_u=3.3;\n    break;\n  default:\n    console.log(`type filament`);\n}\n\nconst prix = prix_u*parseInt(msg.payload);\nflow.set('prix_laser',prix);\nmsg.payload=prix;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 700,
        "wires": [
            [
                "74f8a0f549ef499d"
            ]
        ]
    },
    {
        "id": "973a4689c5e96df6",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "INSERT",
        "func": "//if (Math.random() < 0.5) { room = 503;}else{ room = 602; }\n//if (Math.random() < 0.5) { id = 9909;}else{ id = 1893; }\nlet classe =msg.annee;\nlet nom = msg.eleve;\nlet fabrication=\"\";\nlet prix =0;\nif (msg.impr3d_bool)fabrication = '3d :'+ msg.filament +\" : \" + msg.filament_gr + \"gr\";\nif(msg.laser_bool)fabrication = fabrication +' // las :'  + msg.mat_laser +\" : \"+ msg.mat_laser_qte;\nlet prix_3d = flow.get('prix_3d');\nlet prix_laser = flow.get('prix_laser');\n\nlet bdd_bool = flow.get(\"bdd_bool\");\nlet table_name =\"usage_lab_test\";\nif (bdd_bool){\n    table_name=\"usage_lab\";\n}\nelse{\n    table_name=\"usage_lab_test\";\n}\n\nlet remarques = flow.get('remarques');\n\n\nif (msg.impr3d_bool)prix += parseFloat(prix_3d);\nif(msg.laser_bool)prix += parseFloat(prix_laser);\n//let prix = \"sousou\";\nlet reglement;\nif (flow.get('reglement_bool')){\n    reglement = 'true';\n}\nelse{\n    reglement = 'false';\n}\n\nlet cao;\nif (flow.get('cao_bool')){\n    cao = 'true';\n}\nelse{\n    cao = 'false';\n}\n\nlet date = new Date();\ndate = date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear() + \"  \" + \n      date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n//let reglement = \"reglement\";\n\n//let Cao = flow.get('cao_bool');\n//let Cao = \"cao\";\n\nlet topic;\n//let Cao = msg.cao_bool;\n\n\ntopic = \"INSERT INTO `nodered`.`\";\ntopic = topic + table_name+\"` (classe, nom, fabrication, prix, reglement, CAO, remarques, date_entr) VALUES ('\";\ntopic = topic + classe +\"', '\";\ntopic = topic + nom + \"', '\";\ntopic = topic + fabrication + \"', '\";\ntopic = topic + prix + \"', \";\ntopic = topic + reglement + \", \";\ntopic = topic + cao + \", '\";\ntopic = topic + remarques + \"', '\";\ntopic = topic + date + \"'); \";\n\nmsg.topic = topic;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 560,
        "wires": [
            [
                "fadf0bb2e9e0c0f4"
            ]
        ]
    },
    {
        "id": "a8b7adc480aebfce",
        "type": "inject",
        "z": "29fd68d1903a9d50",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 600,
        "y": 600,
        "wires": [
            [
                "973a4689c5e96df6"
            ]
        ]
    },
    {
        "id": "a65ffd02b3431baa",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resetSearch",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 620,
        "wires": [
            [
                "152245ee3d7378f8",
                "b7332f435e93a713"
            ]
        ]
    },
    {
        "id": "426591a9da4ed6a0",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 620,
        "wires": [
            [
                "cf8d049a052c5c4f",
                "6eed9d5a57ee0f30"
            ]
        ]
    },
    {
        "id": "41de7195f1a80562",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bdd_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 840,
        "wires": [
            [
                "31ea119bae7f8b25"
            ]
        ]
    },
    {
        "id": "49581d7c289bb4d7",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "remarques",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2090,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "f170788fc69e8239",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1680,
        "y": 860,
        "wires": [
            [
                "452c5481fe1f7229"
            ]
        ]
    },
    {
        "id": "983c4cf463cca2ed",
        "type": "inject",
        "z": "29fd68d1903a9d50",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1080,
        "y": 560,
        "wires": [
            [
                "a65ffd02b3431baa"
            ]
        ]
    },
    {
        "id": "69370acad750e19d",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "SELECT bdd",
        "func": "let bdd_bool = flow.get(\"bdd_bool\");\nlet table_name = \"usage_lab_test\";\n\nif (bdd_bool) {\n    table_name = \"usage_lab\";\n}\nelse {\n    table_name = \"usage_lab_test\";\n}\n\nlet topic = \"\";\ntopic = \"SELECT * FROM `nodered`.`\";\ntopic = topic + table_name + \"` ORDER BY no DESC;\";\n\n\nvar newMsg = {\n    \"topic\": topic\n}\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 840,
        "wires": [
            [
                "bdf2f7724f74c1d8",
                "b8e335ce47c42682"
            ]
        ]
    },
    {
        "id": "c0bdde4033a864f7",
        "type": "ui_button",
        "z": "29fd68d1903a9d50",
        "name": "",
        "group": "cb7e38a87943e192",
        "order": 35,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Valider",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 420,
        "y": 560,
        "wires": [
            [
                "997b241844d124af"
            ]
        ]
    },
    {
        "id": "7f901eb74e679cf7",
        "type": "ui_button",
        "z": "29fd68d1903a9d50",
        "name": "",
        "group": "cb7e38a87943e192",
        "order": 1,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "7037bcd8fb5d9e48",
                "9e9583c3f62a7964"
            ]
        ]
    },
    {
        "id": "8871ae607e4f9f4a",
        "type": "ui_dropdown",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "Année / Classe",
        "tooltip": "",
        "place": "Select option",
        "group": "cb7e38a87943e192",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 980,
        "y": 120,
        "wires": [
            [
                "3e47a5bdef4676f0"
            ]
        ]
    },
    {
        "id": "0acdb9d043158a67",
        "type": "ui_dropdown",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "Eleve",
        "tooltip": "",
        "place": "Select option",
        "group": "cb7e38a87943e192",
        "order": 4,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1170,
        "y": 300,
        "wires": [
            [
                "932550833181df8e"
            ]
        ]
    },
    {
        "id": "678aca008d4854bb",
        "type": "ui_dropdown",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "Type Filament",
        "tooltip": "",
        "place": "Select option",
        "group": "cb7e38a87943e192",
        "order": 13,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "PLA",
                "type": "str"
            },
            {
                "label": "",
                "value": "PLA flex",
                "type": "str"
            },
            {
                "label": "",
                "value": "PLA transparent",
                "type": "str"
            },
            {
                "label": "",
                "value": "PLA bois",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1680,
        "y": 520,
        "wires": [
            [
                "2e2ec6aa05671e95",
                "c378e65b5480ba42"
            ]
        ]
    },
    {
        "id": "1b02a10bc337909a",
        "type": "ui_dropdown",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "Materiel Laser",
        "tooltip": "",
        "place": "Select option",
        "group": "cb7e38a87943e192",
        "order": 15,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "CP 3mm",
                "type": "str"
            },
            {
                "label": "",
                "value": "CP 5mm",
                "type": "str"
            },
            {
                "label": "",
                "value": "PMMA 3mm",
                "type": "str"
            },
            {
                "label": "",
                "value": "PMMA 5mm",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1680,
        "y": 760,
        "wires": [
            [
                "26ace20f8482afd1",
                "50699363d98dffab"
            ]
        ]
    },
    {
        "id": "594499c599089076",
        "type": "ui_switch",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "Impression 3D",
        "tooltip": "",
        "group": "cb7e38a87943e192",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1680,
        "y": 460,
        "wires": [
            [
                "2376d8a3bfe6c63c"
            ]
        ]
    },
    {
        "id": "f9c102dd4a0c3fd8",
        "type": "ui_switch",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "Découpeuse laser",
        "tooltip": "",
        "group": "cb7e38a87943e192",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1690,
        "y": 700,
        "wires": [
            [
                "0e4953af2ba43c1d"
            ]
        ]
    },
    {
        "id": "5ceefe8e718f7e69",
        "type": "ui_switch",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "CAO",
        "tooltip": "",
        "group": "cb7e38a87943e192",
        "order": 23,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1640,
        "y": 1020,
        "wires": [
            [
                "25652091b5049f7d"
            ]
        ]
    },
    {
        "id": "ec3885aec0c022a8",
        "type": "ui_switch",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "reglement",
        "tooltip": "",
        "group": "cb7e38a87943e192",
        "order": 17,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1650,
        "y": 900,
        "wires": [
            [
                "07be0a3666918d07"
            ]
        ]
    },
    {
        "id": "51099519bf0a2d99",
        "type": "ui_switch",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "BDD_Prod",
        "tooltip": "",
        "group": "cb7e38a87943e192",
        "order": 6,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 840,
        "wires": [
            [
                "41de7195f1a80562"
            ]
        ]
    },
    {
        "id": "6eed9d5a57ee0f30",
        "type": "ui_text_input",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "Quantité (unité)",
        "tooltip": "",
        "group": "cb7e38a87943e192",
        "order": 20,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2350,
        "y": 700,
        "wires": [
            [
                "533b2151254ad309"
            ]
        ]
    },
    {
        "id": "cf8d049a052c5c4f",
        "type": "ui_text_input",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "Quantité (en gr)",
        "tooltip": "",
        "group": "cb7e38a87943e192",
        "order": 18,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2160,
        "y": 600,
        "wires": [
            [
                "3bef16889592706a"
            ]
        ]
    },
    {
        "id": "452c5481fe1f7229",
        "type": "ui_text_input",
        "z": "29fd68d1903a9d50",
        "name": "",
        "label": "Remarques",
        "tooltip": "",
        "group": "cb7e38a87943e192",
        "order": 33,
        "width": 9,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1880,
        "y": 860,
        "wires": [
            [
                "49581d7c289bb4d7"
            ]
        ]
    },
    {
        "id": "68d85b237798ba64",
        "type": "ui_text",
        "z": "29fd68d1903a9d50",
        "group": "cb7e38a87943e192",
        "order": 28,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "€/kg",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2010,
        "y": 520,
        "wires": []
    },
    {
        "id": "e8a1a5d57ba0b28c",
        "type": "ui_text",
        "z": "29fd68d1903a9d50",
        "group": "cb7e38a87943e192",
        "order": 24,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Prix Impression",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2700,
        "y": 600,
        "wires": []
    },
    {
        "id": "c9b200a30066b2b3",
        "type": "ui_text",
        "z": "29fd68d1903a9d50",
        "group": "cb7e38a87943e192",
        "order": 30,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "€/unité",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2000,
        "y": 760,
        "wires": []
    },
    {
        "id": "74f8a0f549ef499d",
        "type": "ui_text",
        "z": "29fd68d1903a9d50",
        "group": "cb7e38a87943e192",
        "order": 26,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Prix materiaux",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2910,
        "y": 700,
        "wires": []
    },
    {
        "id": "fadf0bb2e9e0c0f4",
        "type": "mysql",
        "z": "29fd68d1903a9d50",
        "mydb": "f3318311c7abaf8f",
        "name": "mariadb",
        "x": 870,
        "y": 620,
        "wires": [
            [
                "a65ffd02b3431baa",
                "ca7b212ce650a93b"
            ]
        ]
    },
    {
        "id": "bdf2f7724f74c1d8",
        "type": "mysql",
        "z": "29fd68d1903a9d50",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 1170,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "fbd2ae8a08a0955b",
        "type": "inject",
        "z": "29fd68d1903a9d50",
        "name": "Get Last Students",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 1260,
        "wires": [
            [
                "7d77f3496ccae3f4"
            ]
        ]
    },
    {
        "id": "7d77f3496ccae3f4",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "SELECT LAST STUDENTS",
        "func": "// Récupération du booléen pour savoir quelle table utiliser\nlet bdd_bool = flow.get(\"bdd_bool\");\nlet table_name = (bdd_bool) ? \"usage_lab\" : \"usage_lab_test\";\n\n// Construction de la requête SQL\nlet topic = \"SELECT nom, classe, MAX(date) AS derniere_utilisation FROM `nodered`.`\" + table_name + \"` GROUP BY nom, classe ORDER BY derniere_utilisation DESC LIMIT 10;\";\n\nmsg.topic = topic;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 1260,
        "wires": [
            [
                "4961f3b1e70806ba"
            ]
        ]
    },
    {
        "id": "4961f3b1e70806ba",
        "type": "mysql",
        "z": "29fd68d1903a9d50",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 930,
        "y": 1260,
        "wires": [
            [
                "2dc44dc327ed30f7"
            ]
        ]
    },
    {
        "id": "2dc44dc327ed30f7",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "Format Last Students",
        "func": "// On suppose que msg.payload contient le tableau de résultats SQL\n// On mappe pour ne retenir que { nom, classe }\nmsg.lastStudents = msg.payload.map(el => { \n    return { nom: el.nom, classe: el.classe};\n});\n\n// Transmet le tableau pour le ui_template\nmsg.payload = msg.lastStudents;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 1260,
        "wires": [
            [
                "1070eb032143f650"
            ]
        ]
    },
    {
        "id": "1070eb032143f650",
        "type": "ui_template",
        "z": "29fd68d1903a9d50",
        "group": "19c4dceaef537425",
        "name": "Last Students Buttons",
        "order": 1,
        "width": 9,
        "height": 12,
        "format": "<div layout=\"column\" layout-wrap>\n  <div ng-repeat=\"el in msg.payload\" style=\"margin:10px;\">\n    <md-button class=\"md-raised md-primary\" ng-click=\"send({payload: el})\">\n<strong>{{el.nom}}</strong><span ng-if=\"el.classe\"> ({{el.classe}})</span>    </md-button>\n  </div>\n</div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1410,
        "y": 1260,
        "wires": [
            [
                "328ddb487178336a"
            ]
        ]
    },
    {
        "id": "328ddb487178336a",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "Set Selected Student",
        "func": "\nmsg.options= msg.payload.classe;\n\nlet msg1 = Object.assign({}, msg);\nlet msg2 = msg;\n\nmsg2.options =msg.payload.nom;\n\nreturn [msg1,msg2];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1650,
        "y": 1260,
        "wires": [
            [
                "1be07f2c07c4cc22"
            ],
            [
                "4d4658a71438abca"
            ]
        ]
    },
    {
        "id": "1be07f2c07c4cc22",
        "type": "link out",
        "z": "29fd68d1903a9d50",
        "name": "link out 10",
        "mode": "link",
        "links": [
            "58cfd45f40e11b5e"
        ],
        "x": 1785,
        "y": 1240,
        "wires": []
    },
    {
        "id": "58cfd45f40e11b5e",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 15",
        "links": [
            "1be07f2c07c4cc22"
        ],
        "x": 675,
        "y": 220,
        "wires": [
            [
                "7537410d4f0f6660"
            ]
        ]
    },
    {
        "id": "3cbae164359e0115",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 16",
        "links": [
            "e09d929765e1dbe4",
            "152245ee3d7378f8"
        ],
        "x": 255,
        "y": 300,
        "wires": [
            [
                "9e9583c3f62a7964"
            ]
        ]
    },
    {
        "id": "e09d929765e1dbe4",
        "type": "link out",
        "z": "29fd68d1903a9d50",
        "name": "link out 11",
        "mode": "link",
        "links": [
            "3cbae164359e0115"
        ],
        "x": 1365,
        "y": 120,
        "wires": []
    },
    {
        "id": "152245ee3d7378f8",
        "type": "link out",
        "z": "29fd68d1903a9d50",
        "name": "link out 12",
        "mode": "link",
        "links": [
            "3cbae164359e0115",
            "fccd797ca51f23c8"
        ],
        "x": 1315,
        "y": 520,
        "wires": []
    },
    {
        "id": "596d3c50a7a412fb",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 17",
        "links": [
            "8baa2d330f6754f5"
        ],
        "x": 915,
        "y": 220,
        "wires": [
            [
                "81dedbbdbd7429d7"
            ]
        ]
    },
    {
        "id": "8baa2d330f6754f5",
        "type": "link out",
        "z": "29fd68d1903a9d50",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "596d3c50a7a412fb"
        ],
        "x": 1945,
        "y": 1300,
        "wires": []
    },
    {
        "id": "4d4658a71438abca",
        "type": "delay",
        "z": "29fd68d1903a9d50",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1840,
        "y": 1300,
        "wires": [
            [
                "8baa2d330f6754f5"
            ]
        ]
    },
    {
        "id": "81dedbbdbd7429d7",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "options",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 220,
        "wires": [
            [
                "0acdb9d043158a67"
            ]
        ]
    },
    {
        "id": "7537410d4f0f6660",
        "type": "change",
        "z": "29fd68d1903a9d50",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "options",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 220,
        "wires": [
            [
                "8871ae607e4f9f4a"
            ]
        ]
    },
    {
        "id": "7037bcd8fb5d9e48",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "read eleves database",
        "func": "msg.payload = global.get(\"elevesExcel\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 120,
        "wires": [
            [
                "d5d56893c001fa7a"
            ]
        ]
    },
    {
        "id": "9e9583c3f62a7964",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "read eleves database",
        "func": "msg.payload = global.get(\"elevesExcel\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 300,
        "wires": [
            [
                "6ccf513b14533288"
            ]
        ]
    },
    {
        "id": "6d0773c717ca845c",
        "type": "ui_toast",
        "z": "29fd68d1903a9d50",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ok",
        "cancel": "annuler",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 620,
        "y": 900,
        "wires": [
            [
                "cdbbbed29df15b71"
            ]
        ]
    },
    {
        "id": "31ea119bae7f8b25",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "confirmation",
        "func": "if (msg.payload === false) {\n    // On désactive sans confirmation\n    flow.set(\"bdd_bool\", false);\n    return [msg, null];\n} else {\n    // On demande confirmation\n    return [null, { payload: \"Activer la base de production ?\", originalMsg: msg }];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 840,
        "wires": [
            [
                "69370acad750e19d"
            ],
            [
                "6d0773c717ca845c"
            ]
        ]
    },
    {
        "id": "cdbbbed29df15b71",
        "type": "function",
        "z": "29fd68d1903a9d50",
        "name": "annulation",
        "func": "if (msg.payload === \"\") {\n    // L'utilisateur a cliqué sur \"OK\"\n    flow.set(\"bdd_bool\", true);\n    return [{ payload: true }, null]; // vers SELECT et on laisse le switch sur ON\n} else {\n    // L'utilisateur a cliqué sur \"Annuler\"\n    return [null, { payload: false }]; // renvoie au switch pour le remettre à OFF\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 900,
        "wires": [
            [
                "69370acad750e19d"
            ],
            [
                "f9a1aadf02bea859"
            ]
        ]
    },
    {
        "id": "b7332f435e93a713",
        "type": "link out",
        "z": "29fd68d1903a9d50",
        "name": "link out 14",
        "mode": "link",
        "links": [
            "431ab8fcda0fe8e9",
            "5c1ef2584056cc64",
            "c1b339c0210496e4",
            "0b9bc93b90a14799",
            "dcd8849c92fcfacb",
            "0dc4884394ab61dc",
            "3591dd6c92cc5d37"
        ],
        "x": 1405,
        "y": 620,
        "wires": []
    },
    {
        "id": "431ab8fcda0fe8e9",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 18",
        "links": [
            "b7332f435e93a713"
        ],
        "x": 1555,
        "y": 460,
        "wires": [
            [
                "594499c599089076"
            ]
        ]
    },
    {
        "id": "5c1ef2584056cc64",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 19",
        "links": [
            "b7332f435e93a713"
        ],
        "x": 1555,
        "y": 620,
        "wires": [
            [
                "426591a9da4ed6a0"
            ]
        ]
    },
    {
        "id": "c1b339c0210496e4",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 20",
        "links": [
            "b7332f435e93a713"
        ],
        "x": 1555,
        "y": 700,
        "wires": [
            [
                "f9c102dd4a0c3fd8"
            ]
        ]
    },
    {
        "id": "0b9bc93b90a14799",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 21",
        "links": [
            "b7332f435e93a713"
        ],
        "x": 1555,
        "y": 860,
        "wires": [
            [
                "f170788fc69e8239"
            ]
        ]
    },
    {
        "id": "dcd8849c92fcfacb",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 22",
        "links": [
            "b7332f435e93a713"
        ],
        "x": 1555,
        "y": 900,
        "wires": [
            [
                "ec3885aec0c022a8"
            ]
        ]
    },
    {
        "id": "0dc4884394ab61dc",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 23",
        "links": [
            "b7332f435e93a713"
        ],
        "x": 1555,
        "y": 1020,
        "wires": [
            [
                "5ceefe8e718f7e69"
            ]
        ]
    },
    {
        "id": "8f45dd4b94025bf8",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 24",
        "links": [
            "ca7b212ce650a93b",
            "b8e335ce47c42682"
        ],
        "x": 445,
        "y": 1220,
        "wires": [
            [
                "7d77f3496ccae3f4"
            ]
        ]
    },
    {
        "id": "ca7b212ce650a93b",
        "type": "link out",
        "z": "29fd68d1903a9d50",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "8f45dd4b94025bf8"
        ],
        "x": 975,
        "y": 660,
        "wires": []
    },
    {
        "id": "b8e335ce47c42682",
        "type": "link out",
        "z": "29fd68d1903a9d50",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "8f45dd4b94025bf8"
        ],
        "x": 1075,
        "y": 880,
        "wires": []
    },
    {
        "id": "3591dd6c92cc5d37",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 25",
        "links": [
            "b7332f435e93a713"
        ],
        "x": 845,
        "y": 800,
        "wires": [
            [
                "69370acad750e19d"
            ]
        ]
    },
    {
        "id": "b0b9d4433b188e7b",
        "type": "comment",
        "z": "29fd68d1903a9d50",
        "name": "vers boutons students",
        "info": "",
        "x": 990,
        "y": 700,
        "wires": []
    },
    {
        "id": "8fd0436426ced61d",
        "type": "comment",
        "z": "29fd68d1903a9d50",
        "name": "vers les classe/noms",
        "info": "",
        "x": 1940,
        "y": 1240,
        "wires": []
    },
    {
        "id": "64a9d8709b849a2d",
        "type": "comment",
        "z": "29fd68d1903a9d50",
        "name": "Boutons last student",
        "info": "",
        "x": 280,
        "y": 1220,
        "wires": []
    },
    {
        "id": "e0fa74f27db07e4b",
        "type": "comment",
        "z": "29fd68d1903a9d50",
        "name": "Changement de base de donnée",
        "info": "",
        "x": 300,
        "y": 800,
        "wires": []
    },
    {
        "id": "8f34b9d6162b7745",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 26",
        "links": [
            "f9a1aadf02bea859"
        ],
        "x": 125,
        "y": 800,
        "wires": [
            [
                "51099519bf0a2d99"
            ]
        ]
    },
    {
        "id": "f9a1aadf02bea859",
        "type": "link out",
        "z": "29fd68d1903a9d50",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "8f34b9d6162b7745"
        ],
        "x": 905,
        "y": 900,
        "wires": []
    },
    {
        "id": "fccd797ca51f23c8",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in 27",
        "links": [
            "152245ee3d7378f8"
        ],
        "x": 265,
        "y": 160,
        "wires": [
            [
                "7037bcd8fb5d9e48"
            ]
        ]
    },
    {
        "id": "8b089876db0dfe6e",
        "type": "link in",
        "z": "29fd68d1903a9d50",
        "name": "link in reset",
        "links": [
            "e4e5be2af9511b04"
        ],
        "x": 55,
        "y": 120,
        "wires": [
            [
                "7f901eb74e679cf7"
            ]
        ]
    },
    {
        "id": "f1a8a57d.896448",
        "type": "inject",
        "z": "b527c2c14fc2357e",
        "name": "CREATE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "d8886e88.2e352",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 240,
        "wires": []
    },
    {
        "id": "565b9eff.a027b",
        "type": "inject",
        "z": "b527c2c14fc2357e",
        "name": "INSERT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 300,
        "wires": [
            [
                "9e50c24de70392cb"
            ]
        ]
    },
    {
        "id": "7286764d.703128",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "e11efb22.8739f8",
        "type": "inject",
        "z": "b527c2c14fc2357e",
        "name": "DELETE ",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "ee3ecafb.5dddf8",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 360,
        "wires": []
    },
    {
        "id": "c0fb919f.f6544",
        "type": "inject",
        "z": "b527c2c14fc2357e",
        "name": "UPDATE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "26081a12.74a426",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 420,
        "wires": []
    },
    {
        "id": "17cfb5e3.60ca7a",
        "type": "inject",
        "z": "b527c2c14fc2357e",
        "name": "COUNT",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 480,
        "wires": [
            [
                "4f194982.db8818"
            ]
        ]
    },
    {
        "id": "c1a61fe1.01abc",
        "type": "inject",
        "z": "b527c2c14fc2357e",
        "name": "SELECT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 780,
        "wires": [
            [
                "2fa7fa16.df7d36"
            ]
        ]
    },
    {
        "id": "284382e1.7b6bde",
        "type": "comment",
        "z": "b527c2c14fc2357e",
        "name": "MariaDB",
        "info": "https://mariadb.org/\n\n//SELECT COUNT(*) FROM RANDOMNUM\n//SELECT COUNT(*) FROM `test`\n// UPDATE RANDOMNUM SET BOOL = 1 WHERE VALUE > 20 AND BOOL = 0\n\n//UPDATE `test`.`access` SET `room`='602' LIMIT 1;\n\n//DELETE FROM RANDOMNUM WHERE TIMESTAMP <= strftime('%s','now', '-30 seconds')*1000\n\n//DELETE FROM `test`.`access` WHERE  `no`=3 AND `time`='2021-06-07 17:37:03' AND `room`=503 AND `id`=1893 LIMIT 1;\n",
        "x": 280,
        "y": 120,
        "wires": []
    },
    {
        "id": "16d49f4f.2f72e1",
        "type": "function",
        "z": "b527c2c14fc2357e",
        "name": "TABLE",
        "func": "let topic = \"\";\n\n// Création de la table `type`\ntopic += \"CREATE TABLE IF NOT EXISTS `type` (\";\ntopic += \"`id` INT NOT NULL AUTO_INCREMENT, \";\ntopic += \"`nom` VARCHAR(255) UNIQUE NOT NULL, \";\ntopic += \"PRIMARY KEY (`id`)\";\ntopic += \") COLLATE='latin1_swedish_ci';\";\n\n// Ajout de la colonne `type_id` dans la table `materiaux` si elle n'existe pas\ntopic += \"ALTER TABLE `materiaux` \";\ntopic += \"ADD COLUMN `type_id` INT NOT NULL, \";\ntopic += \"ADD CONSTRAINT `fk_type` FOREIGN KEY (`type_id`) REFERENCES `type`(`id`) \";\ntopic += \"ON DELETE SET NULL ON UPDATE CASCADE;\";\n\nmsg.topic = topic;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 240,
        "wires": [
            [
                "392b8ab7.e19ac6"
            ]
        ]
    },
    {
        "id": "982a5d4d.e294f",
        "type": "inject",
        "z": "b527c2c14fc2357e",
        "name": "CREATE",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "8f16a404.412c08",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 830,
        "y": 180,
        "wires": []
    },
    {
        "id": "3648a443.b264bc",
        "type": "function",
        "z": "b527c2c14fc2357e",
        "name": "DATABASE",
        "func": "var newMsg = {\n\"topic\" : \"CREATE DATABASE `test2`;\"\n}\nreturn newMsg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 180,
        "wires": [
            [
                "1c79da55.f69436"
            ]
        ]
    },
    {
        "id": "8094763.a62db88",
        "type": "function",
        "z": "b527c2c14fc2357e",
        "name": "DELETE ",
        "func": "var newMsg = {\n\"topic\" : \"DELETE FROM `test`.`access` ORDER BY no DESC LIMIT 1\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 360,
        "wires": [
            [
                "30524e2a.cfc672"
            ]
        ]
    },
    {
        "id": "86051971.03c5c8",
        "type": "function",
        "z": "b527c2c14fc2357e",
        "name": "UPDATE",
        "func": "msg.topic = \"UPDATE `materiaux` SET `type_id` = \" +\n    \"(SELECT `id` FROM `type` WHERE `nom` = 'découpeuse laser') \" +\n    \"WHERE `type` = 'découpeuse laser';\";\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 420,
        "wires": [
            [
                "9112997a.e12398"
            ]
        ]
    },
    {
        "id": "4f194982.db8818",
        "type": "function",
        "z": "b527c2c14fc2357e",
        "name": "COUNT",
        "func": "var newMsg = {\n\"topic\" : \"SELECT COUNT(*) FROM `test`.`access`;\"\n}\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 480,
        "wires": [
            [
                "ef30769c.f2b218"
            ]
        ]
    },
    {
        "id": "6bb93345.de551c",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 480,
        "wires": []
    },
    {
        "id": "2fa7fa16.df7d36",
        "type": "function",
        "z": "b527c2c14fc2357e",
        "name": "SELECT",
        "func": "let bdd_bool = flow.get(\"bdd_bool\");\nlet unpayed = flow.get(\"payed\");\nlet table_name = \"usage_lab_test\";\n\nif (bdd_bool) {\n    table_name = \"usage_lab\";\n}\nelse {\n    table_name = \"usage_lab_test\";\n}\nlet topic = \"\";\n// Construction correcte de la requête\ntopic = \"SELECT * FROM `nodered`.`\" + table_name + \"`\";\n\n// Ajout de WHERE après le nom de la table\nif (unpayed) {\n    topic += \" WHERE `reglement` = 0\";\n}\n\ntopic += \" ORDER BY no DESC;\";\n\n\nvar newMsg = {\n    \"topic\": topic\n}\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 780,
        "wires": [
            [
                "dd12c746.831c48",
                "1f80bf8b66dd158b"
            ]
        ]
    },
    {
        "id": "6d7d1453.5a80ec",
        "type": "function",
        "z": "b527c2c14fc2357e",
        "name": "Date to TS",
        "func": "\nfor(var i = 0; i < msg.payload.length; i++){\n    var dd = new Date(parseInt((new Date(msg.payload[i].date).getTime()).toFixed(0)));\n    msg.payload[i].date = dd.toLocaleTimeString('it-IT');\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 780,
        "wires": [
            [
                "99b466a0.219ac8"
            ]
        ]
    },
    {
        "id": "cb4de9f3.133428",
        "type": "link out",
        "z": "b527c2c14fc2357e",
        "name": "",
        "mode": "link",
        "links": [
            "2061246d.5ba25c"
        ],
        "x": 1005,
        "y": 780,
        "wires": []
    },
    {
        "id": "2061246d.5ba25c",
        "type": "link in",
        "z": "b527c2c14fc2357e",
        "name": "",
        "links": [
            "cb4de9f3.133428"
        ],
        "x": 1235,
        "y": 780,
        "wires": [
            [
                "6d7d1453.5a80ec"
            ]
        ]
    },
    {
        "id": "b5d764fb2dbd31aa",
        "type": "change",
        "z": "b527c2c14fc2357e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bdd_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "background",
                "pt": "msg",
                "to": "payload ? \"prod\" : \"test\"",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 740,
        "wires": [
            [
                "2fa7fa16.df7d36",
                "a82b0a7912e17ef7"
            ]
        ]
    },
    {
        "id": "1f80bf8b66dd158b",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "debug 38",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 720,
        "wires": []
    },
    {
        "id": "e20b2c55df6b0318",
        "type": "change",
        "z": "b527c2c14fc2357e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payed",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 510,
        "y": 820,
        "wires": [
            [
                "2fa7fa16.df7d36"
            ]
        ]
    },
    {
        "id": "a82b0a7912e17ef7",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "debug 40",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "background",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 620,
        "wires": []
    },
    {
        "id": "b97e4ddcf0d6373a",
        "type": "ui_switch",
        "z": "b527c2c14fc2357e",
        "name": "",
        "label": "BDD_Prod",
        "tooltip": "",
        "group": "c271905f5bdbd844",
        "order": 2,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "red",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "green",
        "animate": true,
        "className": "",
        "x": 290,
        "y": 740,
        "wires": [
            [
                "b5d764fb2dbd31aa"
            ]
        ]
    },
    {
        "id": "a02311916fed3d3d",
        "type": "ui_switch",
        "z": "b527c2c14fc2357e",
        "name": "",
        "label": "Tout / Impayé",
        "tooltip": "",
        "group": "c271905f5bdbd844",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 300,
        "y": 820,
        "wires": [
            [
                "e20b2c55df6b0318"
            ]
        ]
    },
    {
        "id": "99b466a0.219ac8",
        "type": "ui_template",
        "z": "b527c2c14fc2357e",
        "group": "c271905f5bdbd844",
        "name": "",
        "order": 1,
        "width": 27,
        "height": 19,
        "format": "<table style=\"width:100%\">\n    <tr>\n        <th>Index</th>\n        <th>Time</th>\n        <th>Classe</th>\n        <th>nom</th>\n        <th>fabrication</th>\n        <th>prix</th>\n        <th>reglement</th>\n        <th>cao</th>\n        <th>remarques</th>\n    </tr>\n    <tr ng-repeat=\"x in msg.payload | limitTo:30\">\n        <td>\n            <center>{{$index}}</center>\n        </td>\n        <td>\n            <center>{{msg.payload[$index].date_entr}}</center>\n        </td>\n        <td>\n            <center>{{msg.payload[$index].classe}}</center>\n        </td>\n        <td>\n            <center>{{msg.payload[$index].nom}}</center>\n        </td>\n        <td>\n            <center>{{msg.payload[$index].fabrication}}</center>\n        </td>\n        <td>\n            <center>{{msg.payload[$index].prix}}</center>\n        </td>\n        <td>\n            <center>{{msg.payload[$index].reglement}}</center>\n        </td>\n        <td>\n            <center>{{msg.payload[$index].CAO}}</center>\n        </td>\n        <td>\n            <center>{{msg.payload[$index].remarques}}</center>\n        </td>\n    </tr>\n</table>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1540,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "fdbcc9a.f22b838",
        "type": "mysql",
        "z": "b527c2c14fc2357e",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 660,
        "y": 300,
        "wires": [
            [
                "7286764d.703128"
            ]
        ]
    },
    {
        "id": "392b8ab7.e19ac6",
        "type": "mysql",
        "z": "b527c2c14fc2357e",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 660,
        "y": 240,
        "wires": [
            [
                "d8886e88.2e352"
            ]
        ]
    },
    {
        "id": "1c79da55.f69436",
        "type": "mysql",
        "z": "b527c2c14fc2357e",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 660,
        "y": 180,
        "wires": [
            [
                "8f16a404.412c08"
            ]
        ]
    },
    {
        "id": "30524e2a.cfc672",
        "type": "mysql",
        "z": "b527c2c14fc2357e",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 660,
        "y": 360,
        "wires": [
            [
                "ee3ecafb.5dddf8"
            ]
        ]
    },
    {
        "id": "9112997a.e12398",
        "type": "mysql",
        "z": "b527c2c14fc2357e",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 660,
        "y": 420,
        "wires": [
            [
                "26081a12.74a426"
            ]
        ]
    },
    {
        "id": "ef30769c.f2b218",
        "type": "mysql",
        "z": "b527c2c14fc2357e",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 660,
        "y": 480,
        "wires": [
            [
                "6bb93345.de551c"
            ]
        ]
    },
    {
        "id": "dd12c746.831c48",
        "type": "mysql",
        "z": "b527c2c14fc2357e",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 890,
        "y": 780,
        "wires": [
            [
                "cb4de9f3.133428"
            ]
        ]
    },
    {
        "id": "5199097776bf4f42",
        "type": "inject",
        "z": "b527c2c14fc2357e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 960,
        "wires": [
            [
                "c693401f5eaf99b0"
            ]
        ]
    },
    {
        "id": "3b6a84cd9e9505bf",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "debug 36",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 900,
        "wires": []
    },
    {
        "id": "c693401f5eaf99b0",
        "type": "change",
        "z": "b527c2c14fc2357e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "default_annee",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_eleve",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_impr3d_bool",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_filament",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_filament_gr",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_laser_bool",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_mat_laser",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_mat_laser_qte",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_reglement_bool",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_cao_bool",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_prix_laser",
                "pt": "global",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "default_prix_3d",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 960,
        "wires": [
            [
                "6e039010befbe73b",
                "f4f401acb784a89d"
            ]
        ]
    },
    {
        "id": "6e039010befbe73b",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "globals",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 900,
        "wires": []
    },
    {
        "id": "f4f401acb784a89d",
        "type": "alafile in",
        "z": "b527c2c14fc2357e",
        "name": "",
        "filename": "/home/pi/Documents/test",
        "format": "xlsx",
        "columns": "*",
        "headers": true,
        "x": 550,
        "y": 960,
        "wires": [
            [
                "3b6a84cd9e9505bf",
                "2d40fef4bf3415dd"
            ]
        ]
    },
    {
        "id": "2d40fef4bf3415dd",
        "type": "function",
        "z": "b527c2c14fc2357e",
        "name": "function 20",
        "func": "global.set(\"elevesExcel\", msg.payload); \nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 960,
        "wires": [
            [
                "e4e5be2af9511b04"
            ]
        ]
    },
    {
        "id": "9e50c24de70392cb",
        "type": "function",
        "z": "b527c2c14fc2357e",
        "name": "INTO",
        "func": "msg.topic = \"INSERT INTO `type` (`nom`) VALUES \" +\n    \"('fil brodeuse'),\" +\n    \"('plaque thermoformeuse');\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 300,
        "wires": [
            [
                "fdbcc9a.f22b838"
            ]
        ]
    },
    {
        "id": "e4e5be2af9511b04",
        "type": "link out",
        "z": "b527c2c14fc2357e",
        "name": "link out insert xlsx",
        "mode": "link",
        "links": [
            "8b089876db0dfe6e",
            "988ee3a15f32b724",
            "297777897f41f07a"
        ],
        "x": 1025,
        "y": 960,
        "wires": []
    },
    {
        "id": "85decf59bf92eb67",
        "type": "inject",
        "z": "b527c2c14fc2357e",
        "name": "ALTER",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 290,
        "y": 540,
        "wires": [
            [
                "7489d2a7ec02842c"
            ]
        ]
    },
    {
        "id": "7489d2a7ec02842c",
        "type": "function",
        "z": "b527c2c14fc2357e",
        "name": "ALTER",
        "func": "msg.topic = \"ALTER TABLE `materiaux` DROP COLUMN `type`;\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 540,
        "wires": [
            [
                "2daf2b63e11143ea"
            ]
        ]
    },
    {
        "id": "08d88e993194d32b",
        "type": "debug",
        "z": "b527c2c14fc2357e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload[0]",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 540,
        "wires": []
    },
    {
        "id": "2daf2b63e11143ea",
        "type": "mysql",
        "z": "b527c2c14fc2357e",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 660,
        "y": 540,
        "wires": [
            [
                "08d88e993194d32b"
            ]
        ]
    },
    {
        "id": "87ff094e498a9ea3",
        "type": "inject",
        "z": "f2c08f5a386b30e6",
        "name": "SELECT",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "1",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "d6dc825145b31a87",
                "f8d99c09ead0509f",
                "7ee19bf146a4384d",
                "45d78489e3bb9f2e",
                "0c8c6a1dd525c4c5",
                "6ebd63f3bed86551",
                "42fc1b9ad9c7d5d5"
            ]
        ]
    },
    {
        "id": "d6dc825145b31a87",
        "type": "function",
        "z": "f2c08f5a386b30e6",
        "name": "SELECT",
        "func": "let bdd_bool = flow.get(\"bdd_bool\");\nlet table_name = \"usage_lab_test\";\n\nif (bdd_bool) {\n    table_name = \"usage_lab\";\n}\nelse {\n    table_name = \"usage_lab_test\";\n}\n\nlet topic = \"\";\ntopic = \"SELECT * FROM `nodered`.`\";\ntopic = topic + table_name + \"` ORDER BY date DESC;\";\n\nvar newMsg = {\n\"topic\" : topic\n}\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 120,
        "wires": [
            [
                "d8dc8a75c00c4d52"
            ]
        ]
    },
    {
        "id": "58f39d62536cdda9",
        "type": "function",
        "z": "f2c08f5a386b30e6",
        "name": "Date to TS",
        "func": "\nfor(var i = 0; i < msg.payload.length; i++){\n    var dd = new Date(parseInt((new Date(msg.payload[i].date).getTime()).toFixed(0)));\n    msg.payload[i].date = dd.toLocaleTimeString('it-IT');\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 180,
        "wires": [
            [
                "cc55b45c7a8a7316",
                "a6faa8abcca4a977"
            ]
        ]
    },
    {
        "id": "b45a1f301b0e264c",
        "type": "link out",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "links": [
            "abc423ecf8cc0c7c"
        ],
        "x": 815,
        "y": 120,
        "wires": []
    },
    {
        "id": "abc423ecf8cc0c7c",
        "type": "link in",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "links": [
            "b45a1f301b0e264c"
        ],
        "x": 595,
        "y": 180,
        "wires": [
            [
                "58f39d62536cdda9"
            ]
        ]
    },
    {
        "id": "cc55b45c7a8a7316",
        "type": "debug",
        "z": "f2c08f5a386b30e6",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 180,
        "wires": []
    },
    {
        "id": "a6faa8abcca4a977",
        "type": "function",
        "z": "f2c08f5a386b30e6",
        "name": "function 7",
        "func": "/*for (let i = 0; i < msg.payload.length; i++) {\n    flow.set('liste_eleve',msg.payload)\n   \n    \n}*/\nflow.set('liste_eleve',msg.payload);\n\n/*\nlet index_list = flow.get('index_liste');\nif (index_list.length == \"0\") {\n    flow.set('index_liste',0);\n}\n\n//flow.set('index_liste',1);\n\nlet tablo = flow.get('liste_eleve')\n//flow.set('bouton_1',tablo[2][\"nom\"]);\n//let i = flow.get('index_liste');\n\nlet k = flow.get('index_liste');\n\nfor (let i = 1; i < 7; i++) {\n    if (k+i-1<tablo.length && k+i-1>=0){\n        flow.set('bouton_'+i,tablo[k+i-1][\"nom\"]);\n    }\n    else if (k+i-1>tablo.length){\n        flow.set('bouton_' + i, tablo[k-tablo.length + i][\"nom\"]);\n    }\n    \n\n}\n*/\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f8d99c09ead0509f",
        "type": "change",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bouton_2",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "background",
                "pt": "msg",
                "to": "green",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 260,
        "wires": [
            [
                "7d7ea95a51b176b5"
            ]
        ]
    },
    {
        "id": "7ee19bf146a4384d",
        "type": "change",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bouton_3",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "background",
                "pt": "msg",
                "to": "red",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 300,
        "wires": [
            [
                "71be0307bc186628"
            ]
        ]
    },
    {
        "id": "45d78489e3bb9f2e",
        "type": "change",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bouton_4",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 340,
        "wires": [
            [
                "4e57f98731bc5ed4"
            ]
        ]
    },
    {
        "id": "0c8c6a1dd525c4c5",
        "type": "change",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bouton_5",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 380,
        "wires": [
            [
                "cfa2959168cf7cc2"
            ]
        ]
    },
    {
        "id": "6ebd63f3bed86551",
        "type": "change",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "bouton_6",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 420,
        "wires": [
            [
                "c7c345372c4d5b79"
            ]
        ]
    },
    {
        "id": "42fc1b9ad9c7d5d5",
        "type": "change",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "index_liste",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 60,
        "wires": [
            [
                "cdb994d38192aeda"
            ]
        ]
    },
    {
        "id": "8eff64b6cbcb7ab6",
        "type": "function",
        "z": "f2c08f5a386b30e6",
        "name": "function 8",
        "func": "let i =flow.get('index_liste');\n\n\ni+=1;\n\nif (i>flow.get('liste_eleve').length-1)i=0;\nflow.set('index_liste',i);\nmsg.payload=flow.get('index_liste');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 620,
        "wires": [
            [
                "b047e1b87ed02405"
            ]
        ]
    },
    {
        "id": "9e53d8c7b95954c8",
        "type": "function",
        "z": "f2c08f5a386b30e6",
        "name": "function 9",
        "func": "let i =flow.get('index_liste');\n\n\ni-=1;\nif (i<=0)i=flow.get('liste_eleve').length-1;\nflow.set('index_liste',i);\nmsg.payload=flow.get('index_liste');\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 660,
        "wires": [
            [
                "b047e1b87ed02405"
            ]
        ]
    },
    {
        "id": "b047e1b87ed02405",
        "type": "function",
        "z": "f2c08f5a386b30e6",
        "name": "function 10",
        "func": "let tablo = flow.get('liste_eleve');\n\nlet k = flow.get('index_liste');\n//let i = msg.payload;\n\n/*\nif (k+i-1<tablo.length && k+i-1>=0){\n        //flow.set('bouton_'+i,tablo[k+i-1][\"nom\"]);\n        msg.promotion = tablo[k+i][\"classe\"];\n        msg.nom = tablo[k+i][\"nom\"];\n    }\n    else if (k+i-1>tablo.length){\n        //flow.set('bouton_' + i, tablo[k-tablo.length + i][\"nom\"]);\n        msg.promotion = tablo[k-tablo.length + i][\"classe\"];\n        msg.nom = tablo[k-tablo.length + i][\"nom\"];\n    }\n\nmsg.index = k;\n*/\n\nmsg.nom = tablo[k][\"nom\"];\nmsg.promotion = tablo[k][\"classe\"];\n\nmsg.date = tablo[k][\"date_entr\"];\nmsg.no = tablo[k][\"no\"];\nmsg.fabrication = tablo[k][\"fabrication\"];\nmsg.prix = tablo[k][\"prix\"];\n\nlet reglement = tablo[k][\"reglement\"];\n\nif (reglement){\n    flow.set(\"reglement\",true);\n}\nelse{\n    flow.set(\"reglement\",false);\n}\n\n\nmsg.payload=tablo[k][\"nom\"];\n//msg.payload=k;\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 600,
        "wires": [
            [
                "970b91708de16a1b",
                "42c7452fed073dfb",
                "a5b33c556dba966f",
                "4919c6f4b5c0102f",
                "3ac87215cccec724",
                "46d4da45b4fe83b6",
                "11f6c3031247c80c",
                "f6493ff2564a5611"
            ]
        ]
    },
    {
        "id": "4919c6f4b5c0102f",
        "type": "debug",
        "z": "f2c08f5a386b30e6",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 860,
        "wires": []
    },
    {
        "id": "0690907f34c7660c",
        "type": "change",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bdd_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 540,
        "wires": [
            [
                "d6dc825145b31a87",
                "b047e1b87ed02405"
            ]
        ]
    },
    {
        "id": "3ac87215cccec724",
        "type": "change",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "reglement",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 760,
        "wires": [
            [
                "449dab1a249138b3"
            ]
        ]
    },
    {
        "id": "50c0b9b7beabb1be",
        "type": "inject",
        "z": "f2c08f5a386b30e6",
        "name": "UPDATE",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 880,
        "y": 920,
        "wires": [
            [
                "7b2f463235307884"
            ]
        ]
    },
    {
        "id": "e1ab8eba5edc78da",
        "type": "debug",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "x": 1410,
        "y": 920,
        "wires": []
    },
    {
        "id": "7b2f463235307884",
        "type": "function",
        "z": "f2c08f5a386b30e6",
        "name": "UPDATE",
        "func": "let tablo = flow.get('liste_eleve');\n\nlet k = flow.get('index_liste');\n\n\nlet bdd_bool = flow.get(\"bdd_bool\");\nlet table_name = \"usage_lab_test\";\n\nif (bdd_bool) {\n    table_name = \"usage_lab\";\n}\nelse {\n    table_name = \"usage_lab_test\";\n}\nlet reglement= flow.get('reglement');\n\nlet topic = \"\";\ntopic = \"UPDATE `fabmanager`.`\";\ntopic = topic + table_name + \"` SET `reglement` =\";\ntopic = topic + reglement + \" WHERE `no`=\";\ntopic = topic + tablo[k][\"no\"] + \";\";\nvar newMsg = {\n    \"topic\": topic\n}\n/*\nvar newMsg = {\n\"topic\" : \"UPDATE `test`.`access` SET `room`='602' ORDER BY date DESC LIMIT 1;\"\n}\n*/\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 920,
        "wires": [
            [
                "39246dedaa33c1e1",
                "53634e54e9286394"
            ]
        ]
    },
    {
        "id": "cae5593c0134bfd9",
        "type": "change",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reglement",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 840,
        "wires": [
            [
                "7b2f463235307884"
            ]
        ]
    },
    {
        "id": "53634e54e9286394",
        "type": "debug",
        "z": "f2c08f5a386b30e6",
        "name": "debug 17",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 980,
        "wires": []
    },
    {
        "id": "8b09ba0694a064e0",
        "type": "inject",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 460,
        "wires": [
            [
                "04db25d2a607bdf3"
            ]
        ]
    },
    {
        "id": "04db25d2a607bdf3",
        "type": "change",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "index_liste",
                "pt": "flow",
                "to": "1",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "cc289aa763cf5d08",
        "type": "ui_button",
        "z": "f2c08f5a386b30e6",
        "name": "next_but",
        "group": "eed4bf37.31aee",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{flow.index_liste}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "skip_next",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 620,
        "wires": [
            [
                "8eff64b6cbcb7ab6"
            ]
        ]
    },
    {
        "id": "7d7ea95a51b176b5",
        "type": "ui_button",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "group": "eed4bf37.31aee",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{background}}",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "71be0307bc186628",
        "type": "ui_button",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "group": "eed4bf37.31aee",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{background}}",
        "className": "",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "4e57f98731bc5ed4",
        "type": "ui_button",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "group": "eed4bf37.31aee",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "cfa2959168cf7cc2",
        "type": "ui_button",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "group": "eed4bf37.31aee",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "c7c345372c4d5b79",
        "type": "ui_button",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "group": "eed4bf37.31aee",
        "order": 14,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "5",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 950,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "e8e1df34a8df5a8d",
        "type": "ui_button",
        "z": "f2c08f5a386b30e6",
        "name": "prev_but",
        "group": "eed4bf37.31aee",
        "order": 6,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "skip_previous",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 660,
        "wires": [
            [
                "9e53d8c7b95954c8"
            ]
        ]
    },
    {
        "id": "920aba19d475c3c8",
        "type": "ui_switch",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "label": "BDD_Prod",
        "tooltip": "",
        "group": "eed4bf37.31aee",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 90,
        "y": 540,
        "wires": [
            [
                "0690907f34c7660c",
                "04db25d2a607bdf3"
            ]
        ]
    },
    {
        "id": "449dab1a249138b3",
        "type": "ui_switch",
        "z": "f2c08f5a386b30e6",
        "name": "",
        "label": "reglement",
        "tooltip": "",
        "group": "0d38df91965e4f1f",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 960,
        "y": 760,
        "wires": [
            [
                "cae5593c0134bfd9"
            ]
        ]
    },
    {
        "id": "970b91708de16a1b",
        "type": "ui_text",
        "z": "f2c08f5a386b30e6",
        "group": "0d38df91965e4f1f",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Promotion",
        "format": "{{msg.promotion}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 730,
        "y": 560,
        "wires": []
    },
    {
        "id": "a5b33c556dba966f",
        "type": "ui_text",
        "z": "f2c08f5a386b30e6",
        "group": "0d38df91965e4f1f",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Eleve",
        "format": "{{msg.nom}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 710,
        "y": 640,
        "wires": []
    },
    {
        "id": "42c7452fed073dfb",
        "type": "ui_text",
        "z": "f2c08f5a386b30e6",
        "group": "0d38df91965e4f1f",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Date",
        "format": "{{msg.date}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 710,
        "y": 600,
        "wires": []
    },
    {
        "id": "cdb994d38192aeda",
        "type": "ui_text",
        "z": "f2c08f5a386b30e6",
        "group": "eed4bf37.31aee",
        "order": 3,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "index",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 550,
        "y": 60,
        "wires": []
    },
    {
        "id": "46d4da45b4fe83b6",
        "type": "ui_text",
        "z": "f2c08f5a386b30e6",
        "group": "0d38df91965e4f1f",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "No",
        "format": "{{msg.no}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 710,
        "y": 520,
        "wires": []
    },
    {
        "id": "11f6c3031247c80c",
        "type": "ui_text",
        "z": "f2c08f5a386b30e6",
        "group": "0d38df91965e4f1f",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Fabrication",
        "format": "{{msg.fabrication}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 730,
        "y": 680,
        "wires": []
    },
    {
        "id": "f6493ff2564a5611",
        "type": "ui_text",
        "z": "f2c08f5a386b30e6",
        "group": "0d38df91965e4f1f",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Prix",
        "format": "{{msg.prix}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 710,
        "y": 720,
        "wires": []
    },
    {
        "id": "d8dc8a75c00c4d52",
        "type": "mysql",
        "z": "f2c08f5a386b30e6",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 700,
        "y": 120,
        "wires": [
            [
                "b45a1f301b0e264c"
            ]
        ]
    },
    {
        "id": "39246dedaa33c1e1",
        "type": "mysql",
        "z": "f2c08f5a386b30e6",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 1240,
        "y": 920,
        "wires": [
            [
                "e1ab8eba5edc78da"
            ]
        ]
    },
    {
        "id": "d600ce69a861afe9",
        "type": "inject",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "props": [
            {
                "p": "src",
                "v": "/home/pi/Pictures/deleuse.jpg",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 640,
        "wires": [
            [
                "672034a071001a62"
            ]
        ]
    },
    {
        "id": "4bef71af9121b245",
        "type": "debug",
        "z": "004fd76ebe3d4b43",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 120,
        "wires": []
    },
    {
        "id": "672034a071001a62",
        "type": "debug",
        "z": "004fd76ebe3d4b43",
        "name": "debug 23",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 700,
        "wires": []
    },
    {
        "id": "9455f28b473c8c5f",
        "type": "inject",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "props": [
            {
                "p": "src",
                "v": "/home/pi/Pictures/deleuse.jpg",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 680,
        "wires": [
            [
                "672034a071001a62"
            ]
        ]
    },
    {
        "id": "5da7851633f9186c",
        "type": "inject",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "props": [
            {
                "p": "src",
                "v": "chrome://branding/content/about-logo.png",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 720,
        "wires": [
            [
                "672034a071001a62"
            ]
        ]
    },
    {
        "id": "f55676bdcfe10167",
        "type": "inject",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "props": [
            {
                "p": "src",
                "v": "image02.jpg",
                "vt": "str"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "3a05bef2f880b03f",
        "type": "inject",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"capture_photo\": \"image01\"}",
        "payloadType": "str",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "5f793ca838ccd599"
            ]
        ]
    },
    {
        "id": "5f793ca838ccd599",
        "type": "json",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 290,
        "y": 760,
        "wires": [
            [
                "672034a071001a62"
            ]
        ]
    },
    {
        "id": "75aa9f4692b7ddb5",
        "type": "inject",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "capture_photo/image01.jpg",
        "payloadType": "str",
        "x": 130,
        "y": 840,
        "wires": [
            [
                "672034a071001a62"
            ]
        ]
    },
    {
        "id": "8abf24b8ec9b6edc",
        "type": "inject",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "capture_photo/image02.jpg",
        "payloadType": "str",
        "x": 350,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "e1977a6f0a8dce32",
        "type": "debug",
        "z": "004fd76ebe3d4b43",
        "name": "debug 24",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 420,
        "wires": []
    },
    {
        "id": "9dc7476e8af583e4",
        "type": "inject",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "/home/pi/.node-red/lib/ui-media/lib/capture_photo",
        "payloadType": "str",
        "x": 260,
        "y": 380,
        "wires": [
            [
                "cdab3bc9e415b95a",
                "b322b901368438e5"
            ]
        ]
    },
    {
        "id": "9dca0c7a94093ec2",
        "type": "function",
        "z": "004fd76ebe3d4b43",
        "name": "function 11",
        "func": "//flow.set('liste',msg.list);\nlet list_nom = flow.get('liste');\nlet index = flow.get('index');\n\nflow.set('length',list_nom.length);\n\nif(2<=index && index<(list_nom.length-2)){\n    flow.set('image1', \"capture_photo/\" + list_nom[index - 2]);\n    flow.set('image2', \"capture_photo/\" + list_nom[index - 1]);\n    flow.set('image3', \"capture_photo/\" + list_nom[index-1]);\n    flow.set('image4', \"capture_photo/\" + list_nom[index + 1]);\n    flow.set('image5', \"capture_photo/\" + list_nom[index + 2]);\n}\nelse if (index<2){\n    flow.set('image1', \"capture_photo/\" + list_nom[list_nom.length-1]);\n    flow.set('image2', \"capture_photo/\" + list_nom[index - 1]);\n    flow.set('image3', \"capture_photo/\" + list_nom[index-1]);\n    flow.set('image4', \"capture_photo/\" + list_nom[index + 1]);\n    flow.set('image5', \"capture_photo/\" + list_nom[index + 2]);\n}\nelse if (index>list_nom.length-3){\n    flow.set('image1', \"capture_photo/\" + list_nom[index - 2]);\n    flow.set('image2', \"capture_photo/\" + list_nom[index - 1]);\n    flow.set('image3', \"capture_photo/\" + list_nom[index]);\n    flow.set('image4', \"capture_photo/\" + list_nom[0]);\n    flow.set('image5', \"capture_photo/\" + list_nom[1]);\n}\n\n\n\nmsg.payload = list_nom;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 220,
        "wires": [
            [
                "5268d897f718c8b7",
                "0704742c736f787e",
                "060570bfa7667eeb",
                "c3bf91ac5b479274",
                "69d8684bed831d62",
                "3ee5e714cc4f652e",
                "b934b8866518438c",
                "dafa7cd8d2368f80"
            ]
        ]
    },
    {
        "id": "5268d897f718c8b7",
        "type": "debug",
        "z": "004fd76ebe3d4b43",
        "name": "debug 25",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 220,
        "wires": []
    },
    {
        "id": "0704742c736f787e",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "image1",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 420,
        "wires": [
            [
                "12b795d90ea2787b",
                "ebc575b91cf056a5"
            ]
        ]
    },
    {
        "id": "ebc575b91cf056a5",
        "type": "debug",
        "z": "004fd76ebe3d4b43",
        "name": "debug 26",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "060570bfa7667eeb",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "image2",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 460,
        "wires": [
            [
                "1051e89103a32e2f"
            ]
        ]
    },
    {
        "id": "c3bf91ac5b479274",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "image3",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 500,
        "wires": [
            [
                "68a83139960b7252"
            ]
        ]
    },
    {
        "id": "69d8684bed831d62",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "image4",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 540,
        "wires": [
            [
                "b9b098a07050f34f"
            ]
        ]
    },
    {
        "id": "3ee5e714cc4f652e",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "image5",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 580,
        "wires": [
            [
                "b59b6356dbd62fd6"
            ]
        ]
    },
    {
        "id": "b322b901368438e5",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "index",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "9e3add95f8d82f66",
        "type": "function",
        "z": "004fd76ebe3d4b43",
        "name": "function 12",
        "func": "let l =flow.get('length');\nlet i = flow.get('index');\n\ni+=1;\n\nif (i>l-1)i=0;\nflow.set('index',i);\nflow.set('length',l);\nmsg.payload=i;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 160,
        "wires": [
            [
                "4bef71af9121b245",
                "9dca0c7a94093ec2"
            ]
        ]
    },
    {
        "id": "b934b8866518438c",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "index",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 140,
        "wires": [
            [
                "db2f628f79c13aca",
                "ac3a9d5f97652b9e"
            ]
        ]
    },
    {
        "id": "dafa7cd8d2368f80",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "length",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 960,
        "y": 100,
        "wires": [
            [
                "ad2c6788e18c3d70",
                "0ec8754dfad04ad5"
            ]
        ]
    },
    {
        "id": "2099104941a8c39f",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "liste",
                "pt": "flow",
                "to": "list",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "eaefd8dca06743d9",
        "type": "inject",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 500,
        "y": 40,
        "wires": [
            [
                "9dca0c7a94093ec2"
            ]
        ]
    },
    {
        "id": "6a51fa1bc002735a",
        "type": "function",
        "z": "004fd76ebe3d4b43",
        "name": "function 13",
        "func": "let l =flow.get('length');\nlet i = flow.get('index');\n\ni-=1;\n\nif (i<0)i=l-1;\nflow.set('index',i);\nflow.set('length',l);\nmsg.payload=i;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 200,
        "wires": [
            [
                "9dca0c7a94093ec2"
            ]
        ]
    },
    {
        "id": "235030a55954cb91",
        "type": "link in",
        "z": "004fd76ebe3d4b43",
        "name": "link in 1",
        "links": [
            "3514a56a864985e3"
        ],
        "x": 75,
        "y": 300,
        "wires": [
            [
                "61fb1a6bba593eee",
                "49375494092bc0fa"
            ]
        ]
    },
    {
        "id": "61fb1a6bba593eee",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/home/pi/.node-red/lib/ui-media/lib/capture_photo",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 320,
        "wires": [
            [
                "cdab3bc9e415b95a",
                "1d176eb5ca9241e7"
            ]
        ]
    },
    {
        "id": "49375494092bc0fa",
        "type": "trigger",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "op1": "1",
        "op2": "1",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 230,
        "y": 280,
        "wires": [
            [
                "9dca0c7a94093ec2",
                "c7071146f746b0eb"
            ]
        ]
    },
    {
        "id": "864422d70423f4bf",
        "type": "sort",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "list",
        "targetType": "msg",
        "msgKey": "payload",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 590,
        "y": 420,
        "wires": [
            [
                "e1977a6f0a8dce32"
            ]
        ]
    },
    {
        "id": "c7071146f746b0eb",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "index",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "1d176eb5ca9241e7",
        "type": "debug",
        "z": "004fd76ebe3d4b43",
        "name": "debug 27",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 320,
        "wires": []
    },
    {
        "id": "deff5feb8f23168e",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "comtpeur_photo",
                "pt": "global",
                "to": "list.length",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 590,
        "y": 620,
        "wires": [
            [
                "7880d06fb1fe6e13"
            ]
        ]
    },
    {
        "id": "61b07a527373c73e",
        "type": "debug",
        "z": "004fd76ebe3d4b43",
        "name": "debug 29",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1120,
        "y": 720,
        "wires": []
    },
    {
        "id": "7880d06fb1fe6e13",
        "type": "change",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "comtpeur_photo",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 660,
        "wires": [
            [
                "61b07a527373c73e"
            ]
        ]
    },
    {
        "id": "ac3a9d5f97652b9e",
        "type": "debug",
        "z": "004fd76ebe3d4b43",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 200,
        "wires": []
    },
    {
        "id": "0ec8754dfad04ad5",
        "type": "debug",
        "z": "004fd76ebe3d4b43",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1300,
        "y": 140,
        "wires": []
    },
    {
        "id": "1917e8be429f89a1",
        "type": "ui_button",
        "z": "004fd76ebe3d4b43",
        "name": "next_but",
        "group": "1206a460156bc9ae",
        "order": 44,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{flow.index_liste}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "skip_next",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "9e3add95f8d82f66"
            ]
        ]
    },
    {
        "id": "d37eef9e10f8e304",
        "type": "ui_button",
        "z": "004fd76ebe3d4b43",
        "name": "prev_but",
        "group": "1206a460156bc9ae",
        "order": 42,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "skip_previous",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "6a51fa1bc002735a"
            ]
        ]
    },
    {
        "id": "db2f628f79c13aca",
        "type": "ui_text",
        "z": "004fd76ebe3d4b43",
        "group": "1206a460156bc9ae",
        "order": 39,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "index",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1130,
        "y": 140,
        "wires": []
    },
    {
        "id": "ad2c6788e18c3d70",
        "type": "ui_text",
        "z": "004fd76ebe3d4b43",
        "group": "1206a460156bc9ae",
        "order": 40,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "length",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1130,
        "y": 100,
        "wires": []
    },
    {
        "id": "12b795d90ea2787b",
        "type": "ui_media",
        "z": "004fd76ebe3d4b43",
        "group": "1206a460156bc9ae",
        "name": "img1",
        "width": 4,
        "height": 3,
        "order": 29,
        "category": "capture_photo",
        "file": "image02.jpg",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 1150,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "1051e89103a32e2f",
        "type": "ui_media",
        "z": "004fd76ebe3d4b43",
        "group": "1206a460156bc9ae",
        "name": "img2",
        "width": 4,
        "height": 3,
        "order": 30,
        "category": "capture_photo",
        "file": "image02.jpg",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 1150,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "68a83139960b7252",
        "type": "ui_media",
        "z": "004fd76ebe3d4b43",
        "group": "1206a460156bc9ae",
        "name": "img3",
        "width": 20,
        "height": 13,
        "order": 2,
        "category": "capture_photo",
        "file": "image02.jpg",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 1150,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "b9b098a07050f34f",
        "type": "ui_media",
        "z": "004fd76ebe3d4b43",
        "group": "1206a460156bc9ae",
        "name": "img4",
        "width": 4,
        "height": 3,
        "order": 32,
        "category": "capture_photo",
        "file": "image02.jpg",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 1150,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "b59b6356dbd62fd6",
        "type": "ui_media",
        "z": "004fd76ebe3d4b43",
        "group": "1206a460156bc9ae",
        "name": "img5",
        "width": 4,
        "height": 3,
        "order": 33,
        "category": "capture_photo",
        "file": "image02.jpg",
        "layout": "adjust",
        "showcontrols": true,
        "loop": true,
        "onstart": false,
        "scope": "local",
        "tooltip": "",
        "x": 1150,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "cdab3bc9e415b95a",
        "type": "fs-list",
        "z": "004fd76ebe3d4b43",
        "name": "",
        "path": "payload",
        "pathType": "msg",
        "pattern": "*",
        "patternType": "str",
        "filter": "all",
        "recursive": false,
        "follow": true,
        "property": "list",
        "propertyType": "msg",
        "x": 440,
        "y": 380,
        "wires": [
            [
                "2099104941a8c39f",
                "864422d70423f4bf",
                "deff5feb8f23168e"
            ]
        ]
    },
    {
        "id": "aba1e7620377741b",
        "type": "function",
        "z": "test_tab_001",
        "name": "function 14",
        "func": "//msg.payload = msg.payload[0][\"Nom de naissance\"];\nconst annee=[];\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    if (!annee.includes(msg.payload[i][\"Promotion\"])) {\n        annee.push(msg.payload[i][\"Promotion\"]);\n    }\n    \n    \n}\nannee.sort();\nannee.push(\"non_inscrit\");\n\nmsg.payload=annee;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 100,
        "wires": [
            [
                "6730ac2075d964f5"
            ]
        ]
    },
    {
        "id": "6730ac2075d964f5",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 100,
        "wires": [
            [
                "ba1de49267e5a808"
            ]
        ]
    },
    {
        "id": "327d2cd87b0bc4e9",
        "type": "function",
        "z": "test_tab_001",
        "name": "function 15",
        "func": "//msg.payload = msg.payload[0][\"Nom de naissance\"];\n\nconst list_eleve=[];\n\nfor (let i = 0; i < msg.payload.length; i++) {\n    if(msg.payload[i][\"Promotion\"]==msg.annee){\n        list_eleve.push(msg.payload[i][\"Nom et Prénom d'usage\"]);\n    }\n   \n    \n}\nlist_eleve.sort();\nmsg.payload=list_eleve;\n\nif (list_eleve.length === 1) {\n    // Définir automatiquement l'élève dans le flow\n    flow.set('eleve', list_eleve[0]);\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 280,
        "wires": [
            [
                "325172790c7d6837"
            ]
        ]
    },
    {
        "id": "c87dede7c3ea6d24",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "annee",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1330,
        "y": 100,
        "wires": [
            [
                "424bfd6b347e851b"
            ]
        ]
    },
    {
        "id": "8e7c8d1e4875345c",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "annee",
                "pt": "msg",
                "to": "annee",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 280,
        "wires": [
            [
                "327d2cd87b0bc4e9"
            ]
        ]
    },
    {
        "id": "325172790c7d6837",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "options",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "715d5ec20e958988"
            ]
        ]
    },
    {
        "id": "e04307cc04cbd8cf",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reglement_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "ce094b0a9cb270d8",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "cao_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1732,
        "y": 1178,
        "wires": [
            []
        ]
    },
    {
        "id": "3fc66bc346f9018b",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "eleve",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "e80a4727e8a6c53f",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "annee",
                "pt": "msg",
                "to": "annee",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "eleve",
                "pt": "msg",
                "to": "eleve",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "impr3d_bool",
                "pt": "msg",
                "to": "impr3d_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "filament",
                "pt": "msg",
                "to": "filament",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "filament_gr",
                "pt": "msg",
                "to": "filament_gr",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "laser_bool",
                "pt": "msg",
                "to": "laser_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_laser",
                "pt": "msg",
                "to": "mat_laser",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_laser_qte",
                "pt": "msg",
                "to": "mat_laser_qte",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "reglement_bool",
                "pt": "msg",
                "to": "reglement_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "cao_bool",
                "pt": "msg",
                "to": "cao_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "prix_laser",
                "pt": "msg",
                "to": "prix_laser",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "prix_3d",
                "pt": "msg",
                "to": "prix_3d",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "vinyle_bool",
                "pt": "msg",
                "to": "vinyle_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_vinyle",
                "pt": "msg",
                "to": "mat_vinyle",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_vinyle_qte",
                "pt": "msg",
                "to": "mat_vinyle_qte",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "brodeuse_bool",
                "pt": "msg",
                "to": "brodeuse_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_fil",
                "pt": "msg",
                "to": "mat_fil",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_fil_qte",
                "pt": "msg",
                "to": "mat_fil_qte",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "thermo_bool",
                "pt": "msg",
                "to": "thermo_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_thermo",
                "pt": "msg",
                "to": "mat_thermo",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_thermo_qte",
                "pt": "msg",
                "to": "mat_thermo_qte",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 540,
        "wires": [
            [
                "05aa5e84c6cd01aa"
            ]
        ]
    },
    {
        "id": "1dfb885551b2b1a4",
        "type": "function",
        "z": "test_tab_001",
        "name": "INSERT",
        "func": "// Élève & table\nlet classe = flow.get('annee');\nlet nom    = flow.get('eleve');\nlet table  = flow.get('bdd_bool_test') ? 'usage_lab' : 'usage_lab_test';\n\n// Fabrication & prix\nlet fabrication = msg.fabrication || '';\nlet prix        = parseFloat(flow.get('totalPrice')) || 0;\n\n// Réglements & options\nlet reglement = flow.get('reglement_bool') ? 1 : 0;\nlet cao       = flow.get('cao_bool')        ? 1 : 0;\nlet remarques = flow.get('remarques')       || '';\n\n// Date au format SQL\nlet d    = new Date();\nlet date = d.toISOString().slice(0,19).replace('T',' ');\n\n// Construction de la requête\nmsg.topic =\n  `INSERT INTO \\`nodered\\`.\\`${table}\\` ` +\n  `(classe, nom, fabrication, prix, reglement, CAO, remarques, date_entr) VALUES (` +\n    `'${classe}',` +\n    `'${nom}',` +\n    `'${fabrication}',` +\n    `${prix},` +\n    `${reglement},` +\n    `${cao},` +\n    `'${remarques}',` +\n    `'${date}'` +\n  `);`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 540,
        "wires": [
            [
                "26a75cce05f63d51",
                "864e7ae5599e13a4"
            ]
        ]
    },
    {
        "id": "5f3e005b7ec8ca06",
        "type": "inject",
        "z": "test_tab_001",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 520,
        "y": 580,
        "wires": [
            [
                "1dfb885551b2b1a4"
            ]
        ]
    },
    {
        "id": "eda577487cc7e102",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "resetSearch",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 600,
        "wires": [
            [
                "de1af86d4fd27b98",
                "4ed9c31def9b04b0"
            ]
        ]
    },
    {
        "id": "e17b038fc0a048ca",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "bdd_bool_test",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 820,
        "wires": [
            [
                "2d1997bdd6c309ce"
            ]
        ]
    },
    {
        "id": "7d2634c54b02bb68",
        "type": "inject",
        "z": "test_tab_001",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1000,
        "y": 540,
        "wires": [
            [
                "eda577487cc7e102"
            ]
        ]
    },
    {
        "id": "60a7a291bd69592d",
        "type": "function",
        "z": "test_tab_001",
        "name": "SELECT bdd",
        "func": "let bdd_bool_test = flow.get(\"bdd_bool_test\");\nlet table_name = \"usage_lab_test\";\n\nif (bdd_bool_test) {\n    table_name = \"usage_lab\";\n}\nelse {\n    table_name = \"usage_lab_test\";\n}\n\nlet topic = \"\";\ntopic = \"SELECT * FROM `nodered`.`\";\ntopic = topic + table_name + \"` ORDER BY no DESC;\";\n\n\nvar newMsg = {\n    \"topic\": topic\n}\nreturn newMsg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 820,
        "wires": [
            [
                "8f38ca494de7d3a1",
                "325f948297a7aafc"
            ]
        ]
    },
    {
        "id": "75974a99e67738c9",
        "type": "ui_button",
        "z": "test_tab_001",
        "name": "",
        "group": "3f0df9d3616d3899",
        "order": 37,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Valider",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 540,
        "wires": [
            [
                "e80a4727e8a6c53f"
            ]
        ]
    },
    {
        "id": "d01e60f5f0af1df5",
        "type": "ui_button",
        "z": "test_tab_001",
        "name": "",
        "group": "3f0df9d3616d3899",
        "order": 1,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "reset",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "daa38b2dd84333aa",
                "9f9fabcb2e291cb0"
            ]
        ]
    },
    {
        "id": "ba1de49267e5a808",
        "type": "ui_dropdown",
        "z": "test_tab_001",
        "name": "",
        "label": "Année / Classe",
        "tooltip": "",
        "place": "Select option",
        "group": "3f0df9d3616d3899",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 1060,
        "y": 100,
        "wires": [
            [
                "c87dede7c3ea6d24"
            ]
        ]
    },
    {
        "id": "715d5ec20e958988",
        "type": "ui_dropdown",
        "z": "test_tab_001",
        "name": "",
        "label": "Eleve",
        "tooltip": "",
        "place": "Select option",
        "group": "3f0df9d3616d3899",
        "order": 3,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1250,
        "y": 280,
        "wires": [
            [
                "3fc66bc346f9018b"
            ]
        ]
    },
    {
        "id": "a644b18c49e8fbae",
        "type": "ui_switch",
        "z": "test_tab_001",
        "name": "",
        "label": "CAO",
        "tooltip": "",
        "group": "3f0df9d3616d3899",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1562,
        "y": 1178,
        "wires": [
            [
                "ce094b0a9cb270d8"
            ]
        ]
    },
    {
        "id": "6b4df6a50bc83580",
        "type": "ui_switch",
        "z": "test_tab_001",
        "name": "",
        "label": "reglement",
        "tooltip": "",
        "group": "3f0df9d3616d3899",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1570,
        "y": 1060,
        "wires": [
            [
                "e04307cc04cbd8cf"
            ]
        ]
    },
    {
        "id": "d37b9b7560b3030f",
        "type": "ui_switch",
        "z": "test_tab_001",
        "name": "",
        "label": "BDD_Prod",
        "tooltip": "",
        "group": "3f0df9d3616d3899",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 120,
        "y": 820,
        "wires": [
            [
                "e17b038fc0a048ca"
            ]
        ]
    },
    {
        "id": "26a75cce05f63d51",
        "type": "mysql",
        "z": "test_tab_001",
        "mydb": "f3318311c7abaf8f",
        "name": "mariadb",
        "x": 790,
        "y": 600,
        "wires": [
            [
                "eda577487cc7e102",
                "24c0b79966777b30"
            ]
        ]
    },
    {
        "id": "8f38ca494de7d3a1",
        "type": "mysql",
        "z": "test_tab_001",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 1090,
        "y": 820,
        "wires": [
            [
                "a4dc70681e2e2d2f"
            ]
        ]
    },
    {
        "id": "a4dc70681e2e2d2f",
        "type": "ui_table",
        "z": "test_tab_001",
        "group": "eb348c43ea325940",
        "name": "",
        "order": 1,
        "width": 19,
        "height": 11,
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 1240,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "inject_last_students",
        "type": "inject",
        "z": "test_tab_001",
        "name": "Get Last Students",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 1780,
        "wires": [
            [
                "function_SELECT"
            ]
        ]
    },
    {
        "id": "function_SELECT",
        "type": "function",
        "z": "test_tab_001",
        "name": "SELECT LAST STUDENTS",
        "func": "// Récupération du booléen pour savoir quelle table utiliser\nlet bdd_bool_test = flow.get(\"bdd_bool_test\");\nlet table_name = (bdd_bool_test) ? \"usage_lab\" : \"usage_lab_test\";\n\n// Construction de la requête SQL\nlet topic = \"SELECT nom, classe, MAX(date) AS derniere_utilisation FROM `nodered`.`\" + table_name + \"` GROUP BY nom, classe ORDER BY derniere_utilisation DESC LIMIT 10;\";\n\nmsg.topic = topic;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 1780,
        "wires": [
            [
                "mysql_last_students"
            ]
        ]
    },
    {
        "id": "mysql_last_students",
        "type": "mysql",
        "z": "test_tab_001",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 780,
        "y": 1780,
        "wires": [
            [
                "function_format"
            ]
        ]
    },
    {
        "id": "function_format",
        "type": "function",
        "z": "test_tab_001",
        "name": "Format Last Students",
        "func": "// On suppose que msg.payload contient le tableau de résultats SQL\n// On mappe pour ne retenir que { nom, classe }\nmsg.lastStudents = msg.payload.map(el => { \n    return { nom: el.nom, classe: el.classe };\n});\n\n// Transmet le tableau pour le ui_template\nmsg.payload = msg.lastStudents;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 1780,
        "wires": [
            [
                "ui_template_buttons"
            ]
        ]
    },
    {
        "id": "ui_template_buttons",
        "type": "ui_template",
        "z": "test_tab_001",
        "group": "9fbd1a17f1217b11",
        "name": "Last Students Buttons",
        "order": 1,
        "width": 10,
        "height": 19,
        "format": "<div layout=\"column\" layout-wrap>\n  <div ng-repeat=\"el in msg.payload\" style=\"margin:10px;\">\n    <md-button class=\"md-raised md-primary\" ng-click=\"send({payload: el})\">\n<strong style=\"text-transform: none;\">{{el.nom}}</strong><span ng-if=\"el.classe\"> ({{el.classe}})</span>    </md-button>\n  </div>\n</div>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 1780,
        "wires": [
            [
                "function_set_selected"
            ]
        ]
    },
    {
        "id": "function_set_selected",
        "type": "function",
        "z": "test_tab_001",
        "name": "Set Selected Student",
        "func": "\nmsg.options= msg.payload.classe;\n\nlet msg1 = Object.assign({}, msg);\nlet msg2 = msg;\n\nmsg2.options =msg.payload.nom;\n\nreturn [msg1,msg2];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 1780,
        "wires": [
            [
                "197f22faecc6c2e8"
            ],
            [
                "13f8f55a4b4f0108"
            ]
        ]
    },
    {
        "id": "197f22faecc6c2e8",
        "type": "link out",
        "z": "test_tab_001",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "1b3b44f86ae626c6"
        ],
        "x": 1675,
        "y": 1760,
        "wires": []
    },
    {
        "id": "1b3b44f86ae626c6",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 2",
        "links": [
            "197f22faecc6c2e8"
        ],
        "x": 755,
        "y": 200,
        "wires": [
            [
                "6e0a1a83254a23a8"
            ]
        ]
    },
    {
        "id": "8a60fcee97ca7722",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 3",
        "links": [
            "cf2005064aeefb8d",
            "de1af86d4fd27b98"
        ],
        "x": 335,
        "y": 280,
        "wires": [
            [
                "9f9fabcb2e291cb0"
            ]
        ]
    },
    {
        "id": "cf2005064aeefb8d",
        "type": "link out",
        "z": "test_tab_001",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "8a60fcee97ca7722"
        ],
        "x": 2025,
        "y": 100,
        "wires": []
    },
    {
        "id": "de1af86d4fd27b98",
        "type": "link out",
        "z": "test_tab_001",
        "name": "link out 4",
        "mode": "link",
        "links": [
            "8a60fcee97ca7722",
            "037d6797f0e67b5b"
        ],
        "x": 1235,
        "y": 500,
        "wires": []
    },
    {
        "id": "d817f2a7d4e644b2",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 4",
        "links": [
            "2c55ac2da9fe2ae4"
        ],
        "x": 995,
        "y": 200,
        "wires": [
            [
                "425c61efe365222d"
            ]
        ]
    },
    {
        "id": "2c55ac2da9fe2ae4",
        "type": "link out",
        "z": "test_tab_001",
        "name": "link out 5",
        "mode": "link",
        "links": [
            "d817f2a7d4e644b2"
        ],
        "x": 1835,
        "y": 1820,
        "wires": []
    },
    {
        "id": "13f8f55a4b4f0108",
        "type": "delay",
        "z": "test_tab_001",
        "name": "",
        "pauseType": "delay",
        "timeout": "50",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1730,
        "y": 1820,
        "wires": [
            [
                "2c55ac2da9fe2ae4"
            ]
        ]
    },
    {
        "id": "425c61efe365222d",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "options",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 200,
        "wires": [
            [
                "715d5ec20e958988"
            ]
        ]
    },
    {
        "id": "daa38b2dd84333aa",
        "type": "function",
        "z": "test_tab_001",
        "name": "read eleves database",
        "func": "msg.payload = global.get(\"elevesExcel\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 100,
        "wires": [
            [
                "aba1e7620377741b"
            ]
        ]
    },
    {
        "id": "9f9fabcb2e291cb0",
        "type": "function",
        "z": "test_tab_001",
        "name": "read eleves database",
        "func": "msg.payload = global.get(\"elevesExcel\");\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 280,
        "wires": [
            [
                "8e7c8d1e4875345c"
            ]
        ]
    },
    {
        "id": "166709b299635ccd",
        "type": "ui_toast",
        "z": "test_tab_001",
        "position": "prompt",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "ok",
        "cancel": "annuler",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 540,
        "y": 880,
        "wires": [
            [
                "c54341ac1822a632"
            ]
        ]
    },
    {
        "id": "2d1997bdd6c309ce",
        "type": "function",
        "z": "test_tab_001",
        "name": "confirmation",
        "func": "if (msg.payload === false) {\n    // On désactive sans confirmation\n    flow.set(\"bdd_bool_test\", false);\n    return [msg, null];\n} else {\n    // On demande confirmation\n    return [null, { payload: \"Activer la base de production ?\", originalMsg: msg }];\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 820,
        "wires": [
            [
                "60a7a291bd69592d"
            ],
            [
                "166709b299635ccd"
            ]
        ]
    },
    {
        "id": "c54341ac1822a632",
        "type": "function",
        "z": "test_tab_001",
        "name": "annulation",
        "func": "if (msg.payload === \"\") {\n    // L'utilisateur a cliqué sur \"OK\"\n    flow.set(\"bdd_bool_test\", true);\n    return [{ payload: true }, null]; // vers SELECT et on laisse le switch sur ON\n} else {\n    // L'utilisateur a cliqué sur \"Annuler\"\n    return [null, { payload: false }]; // renvoie au switch pour le remettre à OFF\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 880,
        "wires": [
            [
                "60a7a291bd69592d"
            ],
            [
                "d41485ee9b3f8858"
            ]
        ]
    },
    {
        "id": "4ed9c31def9b04b0",
        "type": "link out",
        "z": "test_tab_001",
        "name": "link out 6",
        "mode": "link",
        "links": [
            "45808e08f5c9c452",
            "a3cda35957f6bcc5",
            "f83a04ef05ce76f6",
            "650b0b8a2f98d748",
            "a8b3e924368ccee2",
            "fcaf2034175db8e0",
            "a397d83f41122d5c",
            "99f11a67b4d97e96",
            "3f56635286a436a2",
            "b1e691cb309cc99d",
            "684976b537615b7a",
            "4a1827f7ddae584f",
            "cd4cf37bdcae12c3",
            "b5480f959ed28971",
            "7991b37803403a92",
            "d8b6275718ada622",
            "d8119e8aed5474d4",
            "509ae19297125fe7",
            "2978f52ce4b522f9",
            "b7bcafa44fc470f3"
        ],
        "x": 1325,
        "y": 600,
        "wires": []
    },
    {
        "id": "a8b3e924368ccee2",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 9",
        "links": [
            "4ed9c31def9b04b0"
        ],
        "x": 1475,
        "y": 1060,
        "wires": [
            [
                "6b4df6a50bc83580"
            ]
        ]
    },
    {
        "id": "fcaf2034175db8e0",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 10",
        "links": [
            "4ed9c31def9b04b0"
        ],
        "x": 1477,
        "y": 1178,
        "wires": [
            [
                "a644b18c49e8fbae"
            ]
        ]
    },
    {
        "id": "27d7771dbabedaa6",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 11",
        "links": [
            "24c0b79966777b30",
            "325f948297a7aafc"
        ],
        "x": 335,
        "y": 1740,
        "wires": [
            [
                "function_SELECT"
            ]
        ]
    },
    {
        "id": "24c0b79966777b30",
        "type": "link out",
        "z": "test_tab_001",
        "name": "link out 7",
        "mode": "link",
        "links": [
            "27d7771dbabedaa6"
        ],
        "x": 895,
        "y": 640,
        "wires": []
    },
    {
        "id": "325f948297a7aafc",
        "type": "link out",
        "z": "test_tab_001",
        "name": "link out 8",
        "mode": "link",
        "links": [
            "27d7771dbabedaa6"
        ],
        "x": 995,
        "y": 860,
        "wires": []
    },
    {
        "id": "a397d83f41122d5c",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 12",
        "links": [
            "4ed9c31def9b04b0"
        ],
        "x": 765,
        "y": 780,
        "wires": [
            [
                "60a7a291bd69592d"
            ]
        ]
    },
    {
        "id": "d8f12075d6f57e0e",
        "type": "comment",
        "z": "test_tab_001",
        "name": "vers boutons students",
        "info": "",
        "x": 910,
        "y": 680,
        "wires": []
    },
    {
        "id": "4d7ab11226c845df",
        "type": "comment",
        "z": "test_tab_001",
        "name": "vers les classe/noms",
        "info": "",
        "x": 1830,
        "y": 1760,
        "wires": []
    },
    {
        "id": "097ca8105a614fd7",
        "type": "comment",
        "z": "test_tab_001",
        "name": "Boutons last student",
        "info": "",
        "x": 170,
        "y": 1740,
        "wires": []
    },
    {
        "id": "4428c89ea4319695",
        "type": "comment",
        "z": "test_tab_001",
        "name": "Changement de base de donnée",
        "info": "",
        "x": 220,
        "y": 780,
        "wires": []
    },
    {
        "id": "4883437ed9680d6d",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 13",
        "links": [
            "d41485ee9b3f8858"
        ],
        "x": 45,
        "y": 780,
        "wires": [
            [
                "d37b9b7560b3030f"
            ]
        ]
    },
    {
        "id": "d41485ee9b3f8858",
        "type": "link out",
        "z": "test_tab_001",
        "name": "link out 9",
        "mode": "link",
        "links": [
            "4883437ed9680d6d"
        ],
        "x": 825,
        "y": 880,
        "wires": []
    },
    {
        "id": "037d6797f0e67b5b",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 14",
        "links": [
            "de1af86d4fd27b98"
        ],
        "x": 345,
        "y": 140,
        "wires": [
            [
                "daa38b2dd84333aa"
            ]
        ]
    },
    {
        "id": "d48750a31b1eb0a7",
        "type": "ui_template",
        "z": "test_tab_001",
        "group": "3f0df9d3616d3899",
        "name": "Champ nom élève non inscrit",
        "order": 7,
        "width": 6,
        "height": 2,
        "format": "<div ng-if=\"msg.showCustomInput\">\n    <md-input-container >\n        <label style=\"color: white;\">Nom de l'élève non inscrit</label>\n        <input ng-model=\"msg.customName\">\n    </md-input-container>\n    <md-button class=\"md-raised md-primary\" ng-click=\"send({payload: msg.customName})\">\n        Ajouter\n    </md-button>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1800,
        "y": 140,
        "wires": [
            [
                "e9960797950c3c57"
            ]
        ]
    },
    {
        "id": "424bfd6b347e851b",
        "type": "function",
        "z": "test_tab_001",
        "name": "Vérifie selection",
        "func": "if (msg.payload === \"non_inscrit\") {\n    msg.showCustomInput = true;\n    return [null, msg];\n} else {\n    msg.showCustomInput = false;\n    return [msg, null];\n}\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 100,
        "wires": [
            [
                "cf2005064aeefb8d"
            ],
            [
                "d48750a31b1eb0a7"
            ]
        ]
    },
    {
        "id": "6e0a1a83254a23a8",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "options",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 200,
        "wires": [
            [
                "ba1de49267e5a808"
            ]
        ]
    },
    {
        "id": "e9960797950c3c57",
        "type": "function",
        "z": "test_tab_001",
        "name": "function 21",
        "func": "// Récupérer la liste depuis la variable globale\nlet eleves = global.get(\"elevesExcel\") || [];\n\nlet newEleve = {\n    \"Nom et Prénom d'usage\": msg.payload,\n    \"Promotion\": \"non_inscrit\"\n};\n\n// Vérifier l'absence de doublon\nlet exists = eleves.some(e => \n    e[\"Nom et Prénom d'usage\"] === newEleve[\"Nom et Prénom d'usage\"] && \n    e[\"Promotion\"] === \"non_inscrit\"\n);\n\nif (!exists) {\n    // Ajouter l'élève dans le tableau\n    eleves.push(newEleve);\n\n    // Mettre à jour la variable globale\n    global.set(\"elevesExcel\", eleves);\n}\n\n// Préparer le payload pour le dropdown\nmsg.payload = eleves\n    .filter(e => e[\"Promotion\"] === \"non_inscrit\")\n    .map(e => e[\"Nom et Prénom d'usage\"])\n    .sort();\n\nmsg.annee = \"non_inscrit\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2030,
        "y": 140,
        "wires": [
            [
                "325172790c7d6837"
            ]
        ]
    },
    {
        "id": "988ee3a15f32b724",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in reset",
        "links": [
            "e4e5be2af9511b04"
        ],
        "x": 105,
        "y": 100,
        "wires": [
            [
                "d01e60f5f0af1df5"
            ]
        ]
    },
    {
        "id": "init_materials",
        "type": "inject",
        "z": "test_tab_001",
        "name": "Load Materials",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 320,
        "y": 2000,
        "wires": [
            [
                "select_materials",
                "table_commands"
            ]
        ]
    },
    {
        "id": "select_materials",
        "type": "function",
        "z": "test_tab_001",
        "name": "SQL: load materials",
        "func": "msg.topic = \"SELECT m.nom AS nom, t.nom AS type, m.prix AS prix FROM materiaux m JOIN type t ON m.type_id = t.id WHERE m.prix <> -1;\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 2000,
        "wires": [
            [
                "mysql_load_materials"
            ]
        ]
    },
    {
        "id": "mysql_load_materials",
        "type": "mysql",
        "z": "test_tab_001",
        "mydb": "f3318311c7abaf8f",
        "name": "MariaDB",
        "x": 780,
        "y": 2000,
        "wires": [
            [
                "process_materials"
            ]
        ]
    },
    {
        "id": "process_materials",
        "type": "function",
        "z": "test_tab_001",
        "name": "Process materials",
        "func": "// Stocke le tableau complet\nflow.set('materials', msg.payload);\n// Extrait la liste unique des types\nconst types = [...new Set(msg.payload.map(m => m.type))];\nmsg.options = types;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1060,
        "y": 2000,
        "wires": [
            [
                "dropdown_type"
            ]
        ]
    },
    {
        "id": "dropdown_type",
        "type": "ui_dropdown",
        "z": "test_tab_001",
        "name": "Type",
        "label": "Type de matériel",
        "tooltip": "",
        "place": "",
        "group": "aec5d9e9eea485de",
        "order": 3,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "filter_materials",
                "set_unit"
            ]
        ]
    },
    {
        "id": "filter_materials",
        "type": "function",
        "z": "test_tab_001",
        "name": "Filter materials",
        "func": "flow.set('selectedType', msg.payload);\nconst all = flow.get('materials') || [];\nconst list = all.filter(m => m.type === msg.payload).map(m => m.nom);\nmsg.options = list;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 2080,
        "wires": [
            [
                "dropdown_material"
            ]
        ]
    },
    {
        "id": "set_unit",
        "type": "function",
        "z": "test_tab_001",
        "name": "Set unit",
        "func": "// Node: Set unit\nconst type = (msg.payload || '').toLowerCase();\nlet u = 'unité';\nswitch(type) {\n  case 'impression 3d':\n    u = 'g';            // saisie en grammes\n    break;\n  case 'fil brodeuse':\n    u = 'points';       // saisie en nombre de points\n    break;\n  // les autres restent en 'unité'\n}\nflow.set('unitType', u);\nmsg.payload = u;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2140,
        "wires": [
            [
                "text_unit"
            ]
        ]
    },
    {
        "id": "dropdown_material",
        "type": "ui_dropdown",
        "z": "test_tab_001",
        "name": "Matériau",
        "label": "Matériau",
        "tooltip": "",
        "place": "",
        "group": "aec5d9e9eea485de",
        "order": 5,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "",
        "topicType": "str",
        "className": "",
        "x": 1090,
        "y": 2080,
        "wires": [
            [
                "query_price"
            ]
        ]
    },
    {
        "id": "query_price",
        "type": "function",
        "z": "test_tab_001",
        "name": "Query price",
        "func": "flow.set('selectedMaterial', msg.payload);\nmsg.topic = `SELECT prix FROM materiaux WHERE nom='${msg.payload}';`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 2080,
        "wires": [
            [
                "mysql_price"
            ]
        ]
    },
    {
        "id": "mysql_price",
        "type": "mysql",
        "z": "test_tab_001",
        "mydb": "f3318311c7abaf8f",
        "name": "MariaDB",
        "x": 1590,
        "y": 2080,
        "wires": [
            [
                "extract_price"
            ]
        ]
    },
    {
        "id": "extract_price",
        "type": "function",
        "z": "test_tab_001",
        "name": "Extract price",
        "func": "let p = 0;\nif(Array.isArray(msg.payload) && msg.payload.length) p = msg.payload[0].prix;\nflow.set('priceU', p);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1850,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "text_unit",
        "type": "ui_text",
        "z": "test_tab_001",
        "group": "aec5d9e9eea485de",
        "order": 8,
        "width": 2,
        "height": 1,
        "name": "Unité",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1080,
        "y": 2140,
        "wires": []
    },
    {
        "id": "input_qty",
        "type": "ui_text_input",
        "z": "test_tab_001",
        "name": "Quantité",
        "label": "Quantité",
        "tooltip": "",
        "group": "aec5d9e9eea485de",
        "order": 7,
        "width": 8,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": "",
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 480,
        "y": 2200,
        "wires": [
            [
                "set_quantity"
            ]
        ]
    },
    {
        "id": "set_quantity",
        "type": "function",
        "z": "test_tab_001",
        "name": "Set quantity",
        "func": "const q = parseFloat(msg.payload)||0;\nflow.set('qty', q);\nmsg.payload = q;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2200,
        "wires": [
            [
                "calculate_price"
            ]
        ]
    },
    {
        "id": "calculate_price",
        "type": "function",
        "z": "test_tab_001",
        "name": "Calc price",
        "func": "// Récupère qty, prix unitaire et type\nconst qty  = parseFloat(flow.get('qty') || 0);\nconst pu   = parseFloat(flow.get('priceU') || 0);\nconst type = (flow.get('selectedType') || '').toLowerCase();\n\n// Reset de tous les prix\nflow.set('prix_3d', 0);\nflow.set('prix_laser', 0);\nflow.set('prix_vinyle', 0);\nflow.set('prix_fil', 0);\nflow.set('prix_thermo', 0);\n\nlet total = 0;\nswitch(type) {\n  case 'impression 3d':\n    total = (qty / 1000) * pu;         // saisie en g, prix au kg\n    flow.set('prix_3d', total);\n    break;\n  case 'découpeuse laser':\n    total = qty * pu;                  // 1:1\n    flow.set('prix_laser', total);\n    break;\n  case 'découpeuse vinyle':\n    total = qty * pu;                  // 1:1\n    flow.set('prix_vinyle', total);\n    break;\n  case 'fil brodeuse':\n    total = (qty / 1000) * pu;         // saisie en points, prix /1000 pts\n    flow.set('prix_fil', total);\n    break;\n  case 'plaque thermoformeuse':\n    total = qty * pu;                  // 1:1\n    flow.set('prix_thermo', total);\n    break;\n}\n\n// Stockage du total et sortie\nflow.set('totalPrice', total);\nmsg.payload = total;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1010,
        "y": 2200,
        "wires": [
            [
                "text_price"
            ]
        ]
    },
    {
        "id": "text_price",
        "type": "ui_text",
        "z": "test_tab_001",
        "group": "aec5d9e9eea485de",
        "order": 10,
        "width": 8,
        "height": 1,
        "name": "Prix total",
        "label": "Prix : ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 1260,
        "y": 2200,
        "wires": []
    },
    {
        "id": "add_command",
        "type": "ui_button",
        "z": "test_tab_001",
        "name": "Add Cmd",
        "group": "aec5d9e9eea485de",
        "order": 13,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "+ Ajouter commande",
        "tooltip": "",
        "color": "#fff",
        "bgcolor": "#337ab7",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 500,
        "y": 2440,
        "wires": [
            [
                "add_command_fn"
            ]
        ]
    },
    {
        "id": "add_command_fn",
        "type": "function",
        "z": "test_tab_001",
        "name": "Add Command Fn",
        "func": "let cmds = flow.get('commands')||[];\ncmds.push({\n  type: flow.get('selectedType'),\n  materiau: flow.get('selectedMaterial'),\n  quantite: flow.get('qty'),\n  unite: flow.get('unitType'),\n  prix: flow.get('totalPrice')\n});\nflow.set('commands', cmds);\nmsg.payload = cmds;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 2440,
        "wires": [
            [
                "table_commands"
            ]
        ]
    },
    {
        "id": "table_commands",
        "type": "ui_table",
        "z": "test_tab_001",
        "group": "aec5d9e9eea485de",
        "name": "Tableau Cmds",
        "order": 2,
        "width": 8,
        "height": 8,
        "columns": [
            {
                "field": "type",
                "title": "Type",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "materiau",
                "title": "Matériau",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "quantite",
                "title": "Quantité",
                "width": "",
                "align": "right",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "unite",
                "title": "Unité",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            },
            {
                "field": "prix",
                "title": "Prix",
                "width": "",
                "align": "right",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 1040,
        "y": 2440,
        "wires": []
    },
    {
        "id": "05aa5e84c6cd01aa",
        "type": "function",
        "z": "test_tab_001",
        "name": "Set fabrication",
        "func": "// Récupère les flags et valeurs depuis le contexte de flow\nconst impr3d   = flow.get('impr3d_bool');\nconst laser    = flow.get('laser_bool');\nconst vinyle   = flow.get('vinyle_bool');\nconst brodeuse = flow.get('brodeuse_bool');\nconst thermo   = flow.get('thermo_bool');\n\nconst fil    = flow.get('filament')       || '';\nconst fil_g  = flow.get('filament_gr')    || 0;\nconst matL   = flow.get('mat_laser')      || '';\nconst qtyL   = flow.get('mat_laser_qte')  || 0;\nconst matV   = flow.get('mat_vinyle')     || '';\nconst qtyV   = flow.get('mat_vinyle_qte') || 0;\nconst matF   = flow.get('mat_fil')        || '';\nconst qtyF   = flow.get('mat_fil_qte')    || 0;\nconst matT   = flow.get('mat_thermo')     || '';\nconst qtyT   = flow.get('mat_thermo_qte') || 0;\n\n// Construit la chaîne\nlet fabrication = '';\nif (impr3d)   fabrication += `3d:${fil} : ${fil_g}gr`;\nif (laser)    fabrication += (fabrication?' // ':'') + `las:${matL} : ${qtyL}`;\nif (vinyle)   fabrication += (fabrication?' // ':'') + `vinyle:${matV} : ${qtyV}`;\nif (brodeuse) fabrication += (fabrication?' // ':'') + `fil:${matF} : ${qtyF}`;\nif (thermo)   fabrication += (fabrication?' // ':'') + `thermo:${matT} : ${qtyT}`;\n\n// Stocke et renvoie\nflow.set('fabrication', fabrication);\nmsg.fabrication = fabrication;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "385ae025df0520e3",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 980,
        "wires": [
            [
                "bb79787c894cdc0b"
            ]
        ]
    },
    {
        "id": "650b0b8a2f98d748",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 8",
        "links": [
            "4ed9c31def9b04b0"
        ],
        "x": 1475,
        "y": 980,
        "wires": [
            [
                "385ae025df0520e3"
            ]
        ]
    },
    {
        "id": "bb79787c894cdc0b",
        "type": "ui_text_input",
        "z": "test_tab_001",
        "name": "",
        "label": "Remarques",
        "tooltip": "",
        "group": "3f0df9d3616d3899",
        "order": 34,
        "width": 9,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1800,
        "y": 980,
        "wires": [
            [
                "cde2c82b88668ced"
            ]
        ]
    },
    {
        "id": "cde2c82b88668ced",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "remarques",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2010,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "function_split_materials",
        "type": "function",
        "z": "test_tab_001",
        "name": "Split by Type",
        "func": "// On suppose que msg.payload est un tableau de matériaux { nom, type, ... }\nconst all = msg.payload;\n\n// On trie les matériaux selon leur type\nconst impression3D = [];\nconst decoupeLaser = [];\nconst vinyle = [];\n\n//commentaires?\nall.forEach(mat => {\n    const item = mat.nom;\n    switch ((mat.type || \"\").toLowerCase()) {\n        case \"impression 3d\":\n            impression3D.push(item);\n            break;\n        case \"découpeuse laser\":\n            decoupeLaser.push(item);\n            break;\n        case \"découpeuse vinyle\":\n            vinyle.push(item);\n            break;\n            default:\n        // Si un type inattendu apparaît, on peut le logguer pour diagnostic\n        node.warn(`Type inconnu pour « ${mat.nom} »: “${mat.type}”`);\n    }\n});\n\n// On crée les messages de sortie, chacun avec payload + options + topic si tu veux\n    const msg1 = {\n        topic: \"impression 3D\",\n        payload: impression3D,\n        options: impression3D\n    };\n    const msg2 = {\n        topic: \"découpe laser\",\n        payload: decoupeLaser,\n        options: decoupeLaser\n    };\n    const msg3 = {\n        topic: \"découpeuse vinyle\",\n        payload: vinyle,\n        options: vinyle\n    };\n\n    return [msg1, msg2, msg3];\n",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1148,
        "y": 1462,
        "wires": [
            [
                "071db0f4a2418b79",
                "debug_out"
            ],
            [
                "ce3fc6b5fcb19ad7",
                "2a5f57fbedbd386c"
            ],
            [
                "57fd410e71a4df88"
            ]
        ]
    },
    {
        "id": "d3634a1cf3867678",
        "type": "mysql",
        "z": "test_tab_001",
        "mydb": "f3318311c7abaf8f",
        "name": "",
        "x": 938,
        "y": 1462,
        "wires": [
            [
                "function_split_materials",
                "ba91c3a5feb6c4f6"
            ]
        ]
    },
    {
        "id": "071db0f4a2418b79",
        "type": "ui_dropdown",
        "z": "test_tab_001",
        "name": "",
        "label": "Type Filament",
        "tooltip": "",
        "place": "Select option",
        "group": "3f0df9d3616d3899",
        "order": 18,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 1598,
        "y": 502,
        "wires": [
            [
                "c1e83eddd612a882",
                "get_filament_price_q"
            ]
        ]
    },
    {
        "id": "debug_out",
        "type": "debug",
        "z": "test_tab_001",
        "name": "Résultat par type",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1388,
        "y": 1402,
        "wires": []
    },
    {
        "id": "ce3fc6b5fcb19ad7",
        "type": "debug",
        "z": "test_tab_001",
        "name": "Résultat par type",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1408,
        "y": 1462,
        "wires": []
    },
    {
        "id": "2a5f57fbedbd386c",
        "type": "ui_dropdown",
        "z": "test_tab_001",
        "name": "",
        "label": "Materiel Laser",
        "tooltip": "",
        "place": "Select option",
        "group": "3f0df9d3616d3899",
        "order": 17,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "",
                "value": "",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 1598,
        "y": 742,
        "wires": [
            [
                "7d74c3261937c256",
                "get_laser_price_q"
            ]
        ]
    },
    {
        "id": "57fd410e71a4df88",
        "type": "debug",
        "z": "test_tab_001",
        "name": "Résultat par type",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1388,
        "y": 1542,
        "wires": []
    },
    {
        "id": "73b962f6d5dbbf43",
        "type": "function",
        "z": "test_tab_001",
        "name": "SELECT",
        "func": "msg.topic = `\n  SELECT m.nom  AS nom, t.nom  AS type FROM materiaux m JOIN type t ON m.type_id = t.id WHERE m.prix <> -1`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 758,
        "y": 1462,
        "wires": [
            [
                "d3634a1cf3867678",
                "d449ed7060472ae4"
            ]
        ]
    },
    {
        "id": "ba91c3a5feb6c4f6",
        "type": "debug",
        "z": "test_tab_001",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1158,
        "y": 1342,
        "wires": []
    },
    {
        "id": "c1e83eddd612a882",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filament",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1818,
        "y": 542,
        "wires": [
            [
                "ddcd5f9451febddb"
            ]
        ]
    },
    {
        "id": "get_filament_price_q",
        "type": "function",
        "z": "test_tab_001",
        "name": "Query Filament Price",
        "func": "// Construit la requête SQL selon le filament sélectionné\nconst fil = flow.get(\"filament\");\nmsg.topic = `SELECT prix FROM materiaux WHERE nom = '${fil}';`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1818,
        "y": 482,
        "wires": [
            [
                "mysql_filament_price"
            ]
        ]
    },
    {
        "id": "7d74c3261937c256",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mat_laser",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1858,
        "y": 742,
        "wires": [
            [
                "2d156a39325298be"
            ]
        ]
    },
    {
        "id": "get_laser_price_q",
        "type": "function",
        "z": "test_tab_001",
        "name": "Query Laser Price",
        "func": "const mat = flow.get(\"mat_laser\");\nmsg.topic = `SELECT prix FROM materiaux WHERE nom = '${mat}';`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1948,
        "y": 802,
        "wires": [
            [
                "mysql_laser_price"
            ]
        ]
    },
    {
        "id": "inject_start",
        "type": "inject",
        "z": "test_tab_001",
        "name": "Get Materials",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 568,
        "y": 1462,
        "wires": [
            [
                "73b962f6d5dbbf43"
            ]
        ]
    },
    {
        "id": "99f11a67b4d97e96",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 29",
        "links": [
            "4ed9c31def9b04b0"
        ],
        "x": 613,
        "y": 1382,
        "wires": [
            [
                "73b962f6d5dbbf43"
            ]
        ]
    },
    {
        "id": "d449ed7060472ae4",
        "type": "debug",
        "z": "test_tab_001",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 818,
        "y": 1342,
        "wires": []
    },
    {
        "id": "ddcd5f9451febddb",
        "type": "ui_text_input",
        "z": "test_tab_001",
        "name": "",
        "label": "Quantité (en gr)",
        "tooltip": "",
        "group": "3f0df9d3616d3899",
        "order": 21,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2078,
        "y": 582,
        "wires": [
            [
                "a2b51d3742f12645"
            ]
        ]
    },
    {
        "id": "mysql_filament_price",
        "type": "mysql",
        "z": "test_tab_001",
        "mydb": "f3318311c7abaf8f",
        "name": "Get Filament Price",
        "x": 2038,
        "y": 482,
        "wires": [
            [
                "extract_filament_price"
            ]
        ]
    },
    {
        "id": "2d156a39325298be",
        "type": "ui_text_input",
        "z": "test_tab_001",
        "name": "",
        "label": "Quantité (unité)",
        "tooltip": "",
        "group": "3f0df9d3616d3899",
        "order": 20,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 2498,
        "y": 702,
        "wires": [
            [
                "64b9e5cd34a9104e"
            ]
        ]
    },
    {
        "id": "mysql_laser_price",
        "type": "mysql",
        "z": "test_tab_001",
        "mydb": "f3318311c7abaf8f",
        "name": "Get Laser Price",
        "x": 2168,
        "y": 802,
        "wires": [
            [
                "extract_laser_price"
            ]
        ]
    },
    {
        "id": "5b79cb0b332dcb20",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1598,
        "y": 602,
        "wires": [
            [
                "ddcd5f9451febddb",
                "2d156a39325298be"
            ]
        ]
    },
    {
        "id": "a2b51d3742f12645",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "filament_gr",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2278,
        "y": 582,
        "wires": [
            [
                "62fc5a98cc476bef"
            ]
        ]
    },
    {
        "id": "extract_filament_price",
        "type": "function",
        "z": "test_tab_001",
        "name": "Extract Filament Price",
        "func": "// msg.payload is an array of rows from MariaDB\nif (msg.payload && msg.payload.length) {\n  msg.payload = msg.payload[0].prix;\n  flow.set('prix_kg', msg.payload);\n} else {\n  msg.payload = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2258,
        "y": 482,
        "wires": [
            [
                "52f8ec3eb85d95ea"
            ]
        ]
    },
    {
        "id": "64b9e5cd34a9104e",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "mat_laser_qte",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2708,
        "y": 702,
        "wires": [
            [
                "c321c5ee6106d86e"
            ]
        ]
    },
    {
        "id": "extract_laser_price",
        "type": "function",
        "z": "test_tab_001",
        "name": "Extract Laser Price",
        "func": "if (msg.payload && msg.payload.length) {\n  msg.payload = msg.payload[0].prix;\n  flow.set('prix_u', msg.payload);\n} else {\n  msg.payload = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2388,
        "y": 802,
        "wires": [
            [
                "03ddbfa7f18488b5"
            ]
        ]
    },
    {
        "id": "a3cda35957f6bcc5",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 6",
        "links": [
            "4ed9c31def9b04b0"
        ],
        "x": 1473,
        "y": 602,
        "wires": [
            [
                "5b79cb0b332dcb20"
            ]
        ]
    },
    {
        "id": "62fc5a98cc476bef",
        "type": "function",
        "z": "test_tab_001",
        "name": "function 16",
        "func": "const prix_kg = flow.get(\"prix_kg\"); // récupéré depuis la base\nconst poids_gr = parseInt(msg.payload);\n\nconst prix = prix_kg * poids_gr / 1000;\nflow.set(\"prix_3d\", prix);\n\nmsg.payload = prix;\nmsg.prix_kg = prix_kg;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2508,
        "y": 582,
        "wires": [
            [
                "a4fe69580356a279"
            ]
        ]
    },
    {
        "id": "52f8ec3eb85d95ea",
        "type": "ui_text",
        "z": "test_tab_001",
        "group": "3f0df9d3616d3899",
        "order": 26,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "€/kg",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2508,
        "y": 482,
        "wires": []
    },
    {
        "id": "c321c5ee6106d86e",
        "type": "function",
        "z": "test_tab_001",
        "name": "function 19",
        "func": "const prix_u = flow.get(\"prix_u\"); // récupéré depuis la base\nconst qte = parseInt(msg.payload);\n\nconst prix = prix_u * qte;\nflow.set(\"prix_laser\", prix);\nmsg.payload = prix;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2898,
        "y": 702,
        "wires": [
            [
                "111842c30eb7a261"
            ]
        ]
    },
    {
        "id": "03ddbfa7f18488b5",
        "type": "ui_text",
        "z": "test_tab_001",
        "group": "3f0df9d3616d3899",
        "order": 24,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "€/unité",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2748,
        "y": 802,
        "wires": []
    },
    {
        "id": "a4fe69580356a279",
        "type": "ui_text",
        "z": "test_tab_001",
        "group": "3f0df9d3616d3899",
        "order": 31,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Prix Impression",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 2698,
        "y": 582,
        "wires": []
    },
    {
        "id": "111842c30eb7a261",
        "type": "ui_text",
        "z": "test_tab_001",
        "group": "3f0df9d3616d3899",
        "order": 29,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Prix materiaux",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 3058,
        "y": 702,
        "wires": []
    },
    {
        "id": "141ccd067a9c104b",
        "type": "ui_switch",
        "z": "test_tab_001",
        "name": "",
        "label": "Découpeuse laser",
        "tooltip": "",
        "group": "3f0df9d3616d3899",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1610,
        "y": 680,
        "wires": [
            [
                "a5486c0a0e38a5ee"
            ]
        ]
    },
    {
        "id": "f83a04ef05ce76f6",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 7",
        "links": [
            "4ed9c31def9b04b0"
        ],
        "x": 1475,
        "y": 680,
        "wires": [
            [
                "141ccd067a9c104b"
            ]
        ]
    },
    {
        "id": "a5486c0a0e38a5ee",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "laser_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "bf16d1122e01ce07",
        "type": "ui_switch",
        "z": "test_tab_001",
        "name": "",
        "label": "Impression 3D",
        "tooltip": "",
        "group": "3f0df9d3616d3899",
        "order": 13,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1598,
        "y": 442,
        "wires": [
            [
                "02d7cec45b74eee0"
            ]
        ]
    },
    {
        "id": "45808e08f5c9c452",
        "type": "link in",
        "z": "test_tab_001",
        "name": "link in 5",
        "links": [
            "4ed9c31def9b04b0"
        ],
        "x": 1475,
        "y": 440,
        "wires": [
            [
                "bf16d1122e01ce07"
            ]
        ]
    },
    {
        "id": "02d7cec45b74eee0",
        "type": "change",
        "z": "test_tab_001",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "impr3d_bool",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1830,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "btn_validate",
        "type": "ui_button",
        "z": "test_tab_001",
        "name": "Valider",
        "group": "aec5d9e9eea485de",
        "order": 11,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Valider",
        "color": "#ffffff",
        "bgcolor": "#28a745",
        "topic": "",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "eb6afc562732de7c"
            ]
        ]
    },
    {
        "id": "864e7ae5599e13a4",
        "type": "debug",
        "z": "test_tab_001",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 400,
        "wires": []
    },
    {
        "id": "eb6afc562732de7c",
        "type": "change",
        "z": "test_tab_001",
        "name": "Prepare INSERT data",
        "rules": [
            {
                "t": "set",
                "p": "annee",
                "pt": "msg",
                "to": "annee",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "eleve",
                "pt": "msg",
                "to": "eleve",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "impr3d_bool",
                "pt": "msg",
                "to": "impr3d_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "filament",
                "pt": "msg",
                "to": "filament",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "filament_gr",
                "pt": "msg",
                "to": "filament_gr",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "laser_bool",
                "pt": "msg",
                "to": "laser_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_laser",
                "pt": "msg",
                "to": "mat_laser",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_laser_qte",
                "pt": "msg",
                "to": "mat_laser_qte",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "vinyle_bool",
                "pt": "msg",
                "to": "vinyle_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_vinyle",
                "pt": "msg",
                "to": "mat_vinyle",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_vinyle_qte",
                "pt": "msg",
                "to": "mat_vinyle_qte",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "brodeuse_bool",
                "pt": "msg",
                "to": "brodeuse_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_fil",
                "pt": "msg",
                "to": "mat_fil",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_fil_qte",
                "pt": "msg",
                "to": "mat_fil_qte",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "thermo_bool",
                "pt": "msg",
                "to": "thermo_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_thermo",
                "pt": "msg",
                "to": "mat_thermo",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "mat_thermo_qte",
                "pt": "msg",
                "to": "mat_thermo_qte",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "fabrication",
                "pt": "msg",
                "to": "fabrication",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "totalPrice",
                "pt": "msg",
                "to": "totalPrice",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "reglement_bool",
                "pt": "msg",
                "to": "reglement_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "cao_bool",
                "pt": "msg",
                "to": "cao_bool",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "remarques",
                "pt": "msg",
                "to": "remarques",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 480,
        "wires": [
            [
                "23ddd74fb12583d9",
                "b9253f8cee5d1628"
            ]
        ]
    },
    {
        "id": "23ddd74fb12583d9",
        "type": "function",
        "z": "test_tab_001",
        "name": "Set fabrication",
        "func": "// Construit la chaîne fabrication=[type:mat:qtt]\nlet parts = [];\nif (msg.impr3d_bool)    parts.push(`3d:${msg.filament}:${msg.filament_gr}gr`);\nif (msg.laser_bool)     parts.push(`laser:${msg.mat_laser}:${msg.mat_laser_qte}`);\nif (msg.vinyle_bool)    parts.push(`vinyle:${msg.mat_vinyle}:${msg.mat_vinyle_qte}`);\nif (msg.brodeuse_bool)  parts.push(`fil:${msg.mat_fil}:${msg.mat_fil_qte}`);\nif (msg.thermo_bool)    parts.push(`thermo:${msg.mat_thermo}:${msg.mat_thermo_qte}`);\n// jointure\nlet fabrication = parts.join(' // ');\n// expose pour l'INSERT\nmsg.fabrication = fabrication;\nflow.set('fabrication', fabrication);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 480,
        "wires": [
            [
                "1dfb885551b2b1a4",
                "7bae7bc6cf0bce08"
            ]
        ]
    },
    {
        "id": "7bae7bc6cf0bce08",
        "type": "debug",
        "z": "test_tab_001",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 380,
        "wires": []
    },
    {
        "id": "b9253f8cee5d1628",
        "type": "debug",
        "z": "test_tab_001",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 360,
        "wires": []
    },
    {
        "id": "mysql_get_mat",
        "type": "mysql",
        "z": "fd7dc8247b3e3472",
        "mydb": "f3318311c7abaf8f",
        "name": "Get Materials",
        "x": 730,
        "y": 340,
        "wires": [
            [
                "ui_template_mat"
            ]
        ]
    },
    {
        "id": "ui_template_mat",
        "type": "ui_template",
        "z": "fd7dc8247b3e3472",
        "group": "admin_group",
        "name": "Table Matériaux",
        "order": 1,
        "width": 14,
        "height": 10,
        "format": "<md-button class=\"md-raised md-primary\" ng-click=\"send({ action:'save', payload: msg.payload })\">\n  Enregistrer tous\n</md-button>\n<table>\n  <tr>\n    <th>Nom</th>\n    <th>Type</th>\n    <th>Prix (€)</th>\n    <th>Supprimer</th>\n    <th>Désactiver</th>\n  </tr>\n  <tr ng-repeat=\"m in msg.payload\">\n    <td>{{m.nom}}</td>\n    <td>{{m.type}}</td>\n    <td><input type=\"number\" ng-model=\"m.prix\"></td>\n    \n    <td>\n      <md-button class=\"md-warn\" ng-click=\"send({ deleteId: m.id })\">\n        Supprimer\n      </md-button>\n    </td>\n    <td>\n      <md-button class=\"md-accent\" ng-click=\"send({ disableId: m.id })\">\n        Désactiver\n      </md-button>\n    </td>\n  </tr>\n</table>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 940,
        "y": 340,
        "wires": [
            [
                "action_router"
            ]
        ]
    },
    {
        "id": "func_to_array",
        "type": "function",
        "z": "fd7dc8247b3e3472",
        "name": "Prépare mise à jour",
        "func": "// msg.payload est un tableau d’objets {id, nom, prix}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1530,
        "y": 400,
        "wires": [
            [
                "split_mat"
            ]
        ]
    },
    {
        "id": "split_mat",
        "type": "split",
        "z": "fd7dc8247b3e3472",
        "name": "Split matériaux",
        "splt": "payload",
        "spltType": "msg",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "property": "payload",
        "x": 1720,
        "y": 420,
        "wires": [
            [
                "ee5ae9e46cb980b9"
            ]
        ]
    },
    {
        "id": "ee5ae9e46cb980b9",
        "type": "function",
        "z": "fd7dc8247b3e3472",
        "name": "update materiaux",
        "func": "msg.topic = `UPDATE materiaux SET prix = ${msg.payload.prix} WHERE id = ${msg.payload.id}`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1730,
        "y": 460,
        "wires": [
            [
                "mysql_update_mat"
            ]
        ]
    },
    {
        "id": "fdb3b343cfd346fb",
        "type": "inject",
        "z": "fd7dc8247b3e3472",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "b524787c77625f65",
                "182e2805887e908f"
            ]
        ]
    },
    {
        "id": "mysql_update_mat",
        "type": "mysql",
        "z": "fd7dc8247b3e3472",
        "mydb": "f3318311c7abaf8f",
        "name": "Update Material",
        "x": 2540,
        "y": 320,
        "wires": [
            [
                "01cffed8b793e2af"
            ]
        ]
    },
    {
        "id": "59ebe8306adc0e78",
        "type": "function",
        "z": "fd7dc8247b3e3472",
        "name": "insert material",
        "func": "const { nom, prix, type } = msg.payload;\n\nif (!nom || !prix || !type) {\n    node.error(\"Champs manquants\", msg);\n    return null;\n}\n\nmsg.topic = `INSERT INTO materiaux (nom, prix, type_id) VALUES (${JSON.stringify(nom)}, ${prix}, ${type});`;\nmsg\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 120,
        "wires": [
            [
                "173426d140a750af"
            ]
        ]
    },
    {
        "id": "173426d140a750af",
        "type": "mysql",
        "z": "fd7dc8247b3e3472",
        "mydb": "f3318311c7abaf8f",
        "name": "insert mat",
        "x": 1340,
        "y": 120,
        "wires": [
            [
                "b524787c77625f65"
            ]
        ]
    },
    {
        "id": "action_router",
        "type": "function",
        "z": "fd7dc8247b3e3472",
        "name": "Prépare Action",
        "func": "// Détermine l'action en fonction des propriétés présentes\nif (msg.deleteId) {\n    msg.action = \"delete\";\n} else if (msg.disableId) {\n    msg.action = \"disable\";\n} else {\n    msg.action = \"save\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 340,
        "wires": [
            [
                "switch_actions"
            ]
        ]
    },
    {
        "id": "switch_actions",
        "type": "switch",
        "z": "fd7dc8247b3e3472",
        "name": "Action Switch",
        "property": "action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "delete",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "disable",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "save",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 3,
        "x": 1320,
        "y": 340,
        "wires": [
            [
                "1fc99abde25b9165"
            ],
            [
                "2852f54f65728a2a"
            ],
            [
                "func_to_array"
            ]
        ]
    },
    {
        "id": "1fc99abde25b9165",
        "type": "function",
        "z": "fd7dc8247b3e3472",
        "name": "delete",
        "func": "// msg.deleteId contient l’id à supprimer\nmsg.topic = \"DELETE FROM materiaux WHERE id = \" + msg.deleteId;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1490,
        "y": 280,
        "wires": [
            [
                "b2e5edca242d6f0c",
                "mysql_update_mat"
            ]
        ]
    },
    {
        "id": "2852f54f65728a2a",
        "type": "function",
        "z": "fd7dc8247b3e3472",
        "name": "desactiver",
        "func": "// msg.disableId contient l’id à désactiver\nmsg.topic = \"UPDATE materiaux SET prix = -1 WHERE id = \" + msg.disableId;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1510,
        "y": 340,
        "wires": [
            [
                "mysql_update_mat"
            ]
        ]
    },
    {
        "id": "9fd9ac4efdb80ea2",
        "type": "link in",
        "z": "fd7dc8247b3e3472",
        "name": "link in 28",
        "links": [
            "881eaa8fc460d970"
        ],
        "x": 115,
        "y": 140,
        "wires": [
            [
                "b524787c77625f65",
                "182e2805887e908f"
            ]
        ]
    },
    {
        "id": "b524787c77625f65",
        "type": "function",
        "z": "fd7dc8247b3e3472",
        "name": "clean and select the payload",
        "func": "msg.payload = null;  // évite les doubles envois\nmsg.topic = `\nSELECT m.id, m.nom, m.prix, t.nom AS type\nFROM materiaux m\nJOIN type t ON m.type_id = t.id\n`;\nmsg.action = null;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 340,
        "wires": [
            [
                "mysql_get_mat"
            ]
        ]
    },
    {
        "id": "881eaa8fc460d970",
        "type": "link out",
        "z": "fd7dc8247b3e3472",
        "name": "link out 18",
        "mode": "link",
        "links": [
            "9fd9ac4efdb80ea2"
        ],
        "x": 2525,
        "y": 240,
        "wires": []
    },
    {
        "id": "01cffed8b793e2af",
        "type": "rbe",
        "z": "fd7dc8247b3e3472",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 2530,
        "y": 280,
        "wires": [
            [
                "881eaa8fc460d970"
            ]
        ]
    },
    {
        "id": "1291df5c625f5011",
        "type": "ui_template",
        "z": "fd7dc8247b3e3472",
        "group": "432ef441be1cca6f",
        "name": "new mat",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<form>\n  <label for=\"nom\">Nom :</label>\n  <input type=\"text\" id=\"nom\" ng-model=\"nom\" required><br><br>\n\n  <label for=\"prix\">Prix (€) :</label>\n  <input type=\"number\" id=\"prix\" ng-model=\"prix\" required><br><br>\n\n  <label for=\"type\">Type :</label>\n  <select id=\"type\" ng-model=\"type\" ng-options=\"t.id as t.nom for t in msg.payload\" required></select><br><br>\n\n  <button type=\"button\" ng-click=\"submitForm()\">Ajouter</button>\n</form>\n\n<script>\n  (function(scope) {\n    scope.submitForm = function() {\n        scope.send({\n            payload: {\n                nom: scope.nom,\n                prix: scope.prix,\n                type: scope.type\n            }\n        });\n        // Réinitialiser les champs après soumission\n        scope.nom = \"\";\n        scope.prix = null;\n        scope.type = null;\n    };\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 780,
        "y": 120,
        "wires": [
            [
                "e6e4f420912434a2"
            ]
        ]
    },
    {
        "id": "182e2805887e908f",
        "type": "function",
        "z": "fd7dc8247b3e3472",
        "name": "clean and select the payload",
        "func": "msg.topic = \"SELECT id, nom FROM type\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 120,
        "wires": [
            [
                "102265dde937b16e"
            ]
        ]
    },
    {
        "id": "102265dde937b16e",
        "type": "mysql",
        "z": "fd7dc8247b3e3472",
        "mydb": "f3318311c7abaf8f",
        "name": "Get Types",
        "x": 630,
        "y": 120,
        "wires": [
            [
                "1291df5c625f5011"
            ]
        ]
    },
    {
        "id": "e6e4f420912434a2",
        "type": "rbe",
        "z": "fd7dc8247b3e3472",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 930,
        "y": 120,
        "wires": [
            [
                "59ebe8306adc0e78"
            ]
        ]
    },
    {
        "id": "1933470c2f1e1311",
        "type": "debug",
        "z": "fd7dc8247b3e3472",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 180,
        "wires": []
    },
    {
        "id": "297777897f41f07a",
        "type": "link in",
        "z": "fd7dc8247b3e3472",
        "name": "link in reset",
        "links": [
            "e4e5be2af9511b04"
        ],
        "x": 115,
        "y": 180,
        "wires": [
            [
                "182e2805887e908f",
                "b524787c77625f65"
            ]
        ]
    },
    {
        "id": "b2e5edca242d6f0c",
        "type": "debug",
        "z": "fd7dc8247b3e3472",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1480,
        "y": 160,
        "wires": []
    },
    {
        "id": "button_delete",
        "type": "ui_button",
        "z": "fd7dc8247b3e3472",
        "name": "Supprimer",
        "group": "group_id",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Supprimer",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "x": 690,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "delete_action",
        "type": "function",
        "z": "fd7dc8247b3e3472",
        "name": "Action de suppression",
        "func": "// Code pour supprimer l'élément\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 560,
        "wires": [
            []
        ]
    }
]